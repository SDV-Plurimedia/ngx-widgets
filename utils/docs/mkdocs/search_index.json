{
    "docs": [
        {
            "location": "/index.html",
            "text": "Lea\nPulse  est un BackOffice de gestion de contenu editorial\n\n\n\n\nPlateforme collaborative de gestion de contenu editorial\n\n\nStatistique de cr\u00e9ation de contenu\n\n\nSuivis des consultations et partages des articles\n\n\n\n\n Guide d'utilisation: \n\n\n\n\n\n\nD\u00e9veloppeur\n\n\n\n\n\n\nUtilisateur",
            "title": "Accueil"
        },
        {
            "location": "/01_Developpeur/00_Introduction/index.html",
            "text": "Guide d'utilisation: D\u00e9veloppeur\n\n\nCe guide a pour but d'aider les nouveaux d\u00e9veloppeur \u00e0 comprendre LeaPulse\n\n\nNous essayerons au maximum de tenir cette documentation \u00e0 jour, mais pour cela nous avons besoin de vous!\n\n\nPour chaque d\u00e9veloppement que vous faites sur cette plateforme, pensez \u00e0 tenir la documentation \u00e0 jour.\n( la doc se trouve au format \nMarkdown\n\ndans le repertoire \n/documentation/docs/\n d\u00e9coup\u00e9 dans les dossiers \n01_Developpeur\n et \n02_Utilisateur\n )\n\n\nS'il y a un manque de pr\u00e9cision dans une documentation ou des informations erron\u00e9es Merci de nous tenir inform\u00e9s.\n\n\nPour installer votre environnement vous pouvez:\n\n\n\n\nsoit installer docker (m\u00e9thode pr\u00e9f\u00e9r\u00e9e sous linux) et lancer 'docker-compose up',\n\n\nsoit utiliser virtualbox avec notre \nimage de d\u00e9veloppement\n (avec les identifiants leapulsedev/leapulsedev)",
            "title": "Introduction"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html",
            "text": "BackOffice Angular2\n\n\nL'application L\u00e9aPulse se pr\u00e9sente sous la forme d'une SPA (Single Page Application) d\u00e9velopp\u00e9 avec l'aide du Framework Angular2 et du th\u00e8me bootstrap Endless.\n\n\nElle se base sur le language Typescript (tr\u00e9s proche du Javascript ES6), qui nous permet de compiler l'application en JS ES5 ou JS ES6 selon la cible voulue.\n\n\nDans notre cas pr\u00e9sent, l'application sera transform\u00e9 en Javascript ES5, puis minifi\u00e9 (UglifyJS) et regroup\u00e9 (Webpack) en uniquement 3 fichiers.\n\n\nNous vous recommandons d'avoir fait les premiers tutoriaux Angular2 avant de poursuivre \nTuto First Start\n \u00e0 SDV vous pouvez aussi consulter Ng-Book2 en PDF\n\n\nDe plus, vous pouvez \u00e0 tout moment vous r\u00e9f\u00e9rer au \"cheatsheet\" suivant pour les syntaxes de templating \nCheatSheet\n\n\nPour commencer rapidement nous vous conseillons de lire au minimum le d\u00e9coupage de l'application et la partie g\u00e9n\u00e9ration de code de cette documentation\n\n\nSommaire\n\n\n\n\n\n\nInstallation\n\n\nLigne de commande\n\n\nLe D\u00e9coupage de l'application\n\n\n/bin\n\n\n/demo\n\n\n/dist/\n\n\n/docs\n\n\n/e2e\n\n\n/node_modules\n\n\n/src/app\n\n\n/src/assets/\n\n\n/src/environments/\n\n\n/typings\n\n\n\n\n\n\nLes lignes de commandes\n\n\nLancement du serveur de developpement\n\n\nG\u00e9n\u00e9ration d'un module\n\n\n\n\n\n\nLes g\u00e9n\u00e9rateurs de code\n\n\nAngular-CLI\n\n\nCRUD\n\n\nMod\u00e8les\n\n\nTemplates\n\n\nStructure\n\n\n\n\n\n\n\n\n\n\nLes widgets g\u00e9n\u00e9riques\n\n\nBloc-Card\n\n\nBreadCrumb ( Fil d'ariane )\n\n\nButton 3D\n\n\nChevron\n\n\nCKEditor\n\n\nCorner Button\n\n\nDatatable\n\n\nDatePicker\n\n\nFileUpload\n\n\nGraph\n\n\nLoader\n\n\nMenu\n\n\nMenu interne\n\n\nMeta-handler\n\n\nautocomplete\n\n\nPager\n\n\nProgress Bar\n\n\nSearch Bar\n\n\nStatus Bar\n\n\nSwitch\n\n\nTabPane ( Onglets )\n\n\nTouch Button\n\n\nTreeview\n\n\n\n\n\n\nLes composant de type \"Page\"\n\n\nLe Dashboard\n\n\nDashboard / Statistique\n\n\n\n\n\n\nArticle / Liste\n\n\nInterface g\u00e9n\u00e9rale\n\n\nRecherche d'articles\n\n\n\n\n\n\nArticle / Edition\n\n\nGestion des utilisateurs\n\n\nGestion des groupes\n\n\nGestion des permissions\n\n\nGestion des menus\n\n\nGestion multisites\n\n\nIframe\n\n\nTopic / Liste\n\n\nTopic / Cr\u00e9ation\n\n\nTopic / Param\u00e9trage\n\n\n\n\n\n\nLes Services\n\n\nBreadcrumb ( Fil d'ariane )\n\n\nBootbox (pop-in d'alert)\n\n\nStatic Loader\n\n\nConfig\n\n\nUtilisateur\n\n\nNotification\n\n\nHttp Lea\n\n\nHttp L5\n\n\nTwitter\n\n\n\n\n\n\nLes directives\n\n\nAuth Router\n\n\n\n\n\n\nLes pipes\n\n\nLes typings\n\n\n\n\n\n\nInstallation\n\n\nPour commencer \u00e0 developper il vous faudra un environnement node > 5\n\n\nPuis vous devrez installer les d\u00e9pendances par \"npm install --dev\"\n\n\nUn serveur de d\u00e9veloppement est disponible par: \"npm start\", ainsi vos d\u00e9veloppements seront compil\u00e9s \u00e0 la vol\u00e9e\n\n\nLigne de commande\n\n\n\n\nnpm install\n => pour installer les lib pr\u00e9-requis\n\n\nnpm update\n => pour mettre \u00e0 jour les libs\n\n\nnpm start\n => pour lancer l\u2019appli (ouvre automatiquement un navigateur synchronis\u00e9, sinon voir localhost:8080)\n\n\nnpm run gen\n => lancer le g\u00e9n\u00e9rateur de code (pour cr\u00e9er des pages de cruds, g\u00e9n\u00e9rer les routes, etc\u2026)\n\n\nng generate\n => g\u00e9n\u00e9ration des components, services, pipes, directives, modules\n\n\nng build\n => cr\u00e9er une version compil\u00e9, non minifi\u00e9 (accessible en local sur lea-pulse-spa.docker.dev)\n\n\nng build --prod\n => cr\u00e9er une version compil\u00e9, obscursifi\u00e9 et minifi\u00e9 (accessible en local sur lea-pulse-spa.docker.dev)\n\n\n\n\nLe D\u00e9coupage de l'application\n\n\nPour commencer, voici comment se d\u00e9coupe notre application\n(Certains de ces dossiers ne sont pas versionn\u00e9 et seront uniquement pr\u00e9sent une fois qu'ils auront \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9)\n\n\n/bin\n\n\n=> contient des scripts js execut\u00e9 en node uniquement sur le post de d\u00e9v ( ce sont des facilitateurs )\n  /generator\n   /generators\n      => contient les scripts js de g\u00e9n\u00e9ration de code typescripts (scann\u00e9 automatiquement par \u201cnpm run gen\u201d)\n   /templates\n      => contient les fichier 'type' de g\u00e9n\u00e9ration de code\n\n\n/demo\n\n\ncontient un slideshow de demo de l'appli\n\n\n/dist/\n\n\n(ce dossier est versionn\u00e9 pour etre utilis\u00e9 par apache)\n  => contient le r\u00e9sultat final de la compilation  du typescript vers javascript et les fichiers de mapping pour le debug\n  app-xxx.js => l'application compl\u00e9te convertie en js\n  app-xxx.js.map => le fichier de mapping permettant de retrouv\u00e9 la ligne de TS \u00e0 l'origine d'un bug JS\n  vendors-xxx.js => le fichier regrouppant les librariers tierce compil\u00e9 ensemble\n  vendors-xxx.js.map => le fichier de mapping pour d\u00e9bugger les librairies\n\n\n/docs\n\n\ncontient la version g\u00e9n\u00e9r\u00e9 de la documentation\n\n\n/e2e\n\n\ncontient la configuration des test end-to-end\n\n\n/node_modules\n\n\ncontient les scripts import\u00e9s par npm\n( ce dossier n'est pas versionn\u00e9, les fichiers qui nous int\u00e9resse l\u00e0 dedans seront int\u00e9gr\u00e9 au build)\n\n\n/src/app\n\n\n/_core\n  contient les classes devant etre charg\u00e9 une seul fois (notamment les services), et faisant partie du core\n\n/_modules\n  contient les diff\u00e9rents modules li\u00e9 a un client\n\n/_shared\n  contient les classes pouvant etre charg\u00e9 plusieurs fois (commes les components, pipes, directives et models) faisant partie du core\n\n/<module>\n  contient un module de base fournie avec chaque instance de pulse.\n  chacun d'eux peuvent contenir\n\n  /_widgets\n    pour les composants partag\u00e9\n\n  /_directives\n\n  /_pipes\n\n  /_services\n\n  /_models\n\n  /<page>\n\n  <module>.module.ts\n    d\u00e9finie le contenu de ce module et les diff\u00e9rent import necessaire\n\n  <module>.routing.ts\n    d\u00e9finie les diff\u00e9rente routes de l'application\n\n\n\n/src/assets/\n\n\ncontient les libs non accessibles par un gestionnaire de paquets, et du coup qui sont versionn\u00e9 chez nous\n\n\n/src/environments/\n\n\ncontient des conf sp\u00e9cial par environnement (inutilis\u00e9 chez nous, car chaque 'version' correspond a un seul env)\n\n\n/typings\n\n\n(sera remplac\u00e9 petit a petit par node_modules/@types)\n   => contient les descriptions typescript (.tsd) des scripts uniquement pr\u00e9sent \u00e0 l\u2019\u00e9x\u00e9cution du javascript, certain sont install\u00e9 manuellent\n     /browser\n         => contient les tsd import\u00e9s par typings pour les scripts ex\u00e9cutable dans le navigateur\n     /main\n         => contient les tsd import\u00e9 par typings pour les scripts node\n\n\nLes lignes de commandes\n\n\nLancement du serveur de developpement\n\n\nG\u00e9n\u00e9ration d'un module\n\n\nng g module modules/mon-module --routing\n\n\nLes g\u00e9n\u00e9rateurs de code\n\n\nAngular-CLI\n\n\nle programme angular-cli fournie quelques g\u00e9n\u00e9rateur de code, vous permettant la cr\u00e9ation de:\n * \nng g module\n\n * \nng g component\n\n * \nng g service\n\n * \nng g pipe\n\n * \nng g directive\n\n\nceux-ci peuvent etre execut\u00e9 \u00e0 la racine du projet, ou dans un module\n\n\nCRUD\n\n\nLe g\u00e9n\u00e9rateur de CRUD vous permet de cr\u00e9er une page liste (avec datatable) et une page d'edition, ainsi que le service n\u00e9cessaire, a partir d'un model\n\n\nnpm run gen crud\n\n\nC'est alors que plusieurs questions sont pos\u00e9es:\n\n\n\n\nQuelle URL voulez-vous pour votre page de CRUD ? :\n l'url \u00e0 rentrer est relative et s'ins\u00e9rera dans le dossier 'app/components'. Exemple: si l'on choisi l'url 'gestion/blocs', cela correspondra \u00e0 la route du routeur, et les fichiers seront cr\u00e9\u00e9s dans 'app/components/gestions/blocs/.'.\n\n\nSur quel mod\u00e8le se base cette page ? :\n rentrer le nom du fichier mod\u00e8le sans l'extension (ex: app/models/bloc.ts => \"bloc\").\n\n\nA quelle API Laravel voulez-vous vous connecter ? :\n rentrer le nom de la route RESTful choisi dans Laravel. Par exemple, si votre route est d\u00e9finie en Laravel comme ceci : \"Route::resource('bloc', 'BlocController');\", alors vous pouvez rentrer \"bloc\".\n\n\nQuels champs du mod\u00e8le souhaitez-vous cacher ? :\n choisir les variables dans le mod\u00e8le que vous ne souhaitez par afficher dans la \nDatatable\n. Le champ '_id' est cach\u00e9 par d\u00e9faut. Il est possible de ne rentrer aucune information et donc de tout afficher, en appuyant simplement sur Entr\u00e9e.\n\n\n\n\nMod\u00e8les\n\n\nVoici un exemple de mod\u00e8le \u00e0 utiliser pour le g\u00e9n\u00e9rateur de CRUD.\n\n\n  export class Bloc {\n    public _id: string = \"\";\n    public title: string = \"\";\n    public type: string = \"\";\n    public model: string = \"\";\n    public content: string = \"\";\n\n  public constructor(obj?: any) {\n    this._id = obj && obj._id || null;\n    this.title = obj && obj.title || \"\";\n    this.type = obj && obj.type || \"html\";\n    this.model = obj && obj.model || \"\";\n    this.content = obj && obj.content || \"\";\n    }\n  }\n\n\n\n__\n\n\nTemplates\n\n\nLes templates utilis\u00e9s sont pr\u00e9sent dans '/bin/generator/templates/crud'. Il y a 6 templates donc 6 fichiers \u00e9crits:\n\n\n\n\n\n\ncomponents.ts.base\n : le composant d'entr\u00e9e du CRUD, avec le layout principal de la page (de base ne contient que le router).\n\n\n\n\n\n\ncomponentsIndex.ts.base\n : le composant de liste du CRUD, avec la \nDatatable\n de tout les \u00e9l\u00e9ments correspondant au mod\u00e8le.\n\n\n\n\n\n\n\n\n\n\ncomponentsEdit.ts.base\n : le composant d'\u00e9dition d'un \u00e9l\u00e9ment.\n\n\n\n\n\n\n\n\n\n\nservice.ts.base\n : le service qui communiquera avec l'API Laravel.\n\n\n\n\n\n\nmodule.ts.base\n : le module de chargement de ces diff\u00e9rents widgets\n\n\n\n\n\n\nrouting.ts.base\n : la d\u00e9finition des routes du module\n\n\n\n\n\n\nStructure\n\n\nDans les composants g\u00e9n\u00e9r\u00e9s, la \nDatatable\n est automatiquement construite en fonction des variables du mod\u00e8le et des champs choisi pour \u00eatre cach\u00e9 au moment de l'ex\u00e9cution du g\u00e9n\u00e9rateur.\n\n\nIl est n\u00e9anmoins possible de la modifier manuellement. Pour cela, il faut se rendre dans les deux composants g\u00e9n\u00e9r\u00e9s, et d\u00e9commenter la d\u00e9claration de structure.\nIl suffit de la remplir en respectant le pattern : 'id' => nom de variable du mod\u00e8le, 'label' => nom affich\u00e9 sur la page.\n\n\nCette personnalisation de structure est possible pour le composant d'affichage des \u00e9l\u00e9ments ainsi que pour le composant d'\u00e9dition.\n\n\nLes widgets g\u00e9n\u00e9riques\n\n\nBloc-Card\n\n\nBloc de contenu sous forme de carte\n\n\n\n\n<bloc-card class=\"col-lg-4\" [data]=\"{type:'divers', title:'Titre de mon paragraphe', content:'Ici on peut raconter plein de chose'}\"></bloc-card>\n\n\n\n\n\ntitle\n: pour changer le titre du bloc\n\n\ncontent\n: pour changer le contenu du bloc\n\n\ntype\n: peut prendre la valeur: paragraphe, image, divers, autre2, autre3 (ceci le fera changer de couleur)\n\n\n\n\nBreadCrumb ( Fil d'ariane )\n\n\nCe widget ne doit s'integrer qu'une fois dans la page.\nPour son utilisation voir \u00e0 travers le service \nBreadCrumb\n\n\nButton 3D\n\n\nPermet de faire des boutons poussoir en 3d\n\n\n\n\nUtilisation :\n\n\n<button3d [icon]=\"'check'\" [class]=\"'success'\" [size]=\"'btn-sm'\" (click)=\"afficheBootbox('alert')\" > Valider</button3d>\n<button3d [icon]=\"'code-fork'\" [class]=\"'danger'\" (click)=\"afficheBootbox('alert')\" > Pousser en prod</button3d>\n<button3d [icon]=\"'cloud'\" [class]=\"'primary'\" [size]=\"'btn-lg'\" (click)=\"afficheBootbox('alert')\" > Envoyer dans le cloud</button3d>\n\n\n\nChevron\n\n\nLe widget chevron permet de cacher facilement le contenu d'un bloc\n\n\n\n\n\n\nhidden\n : Input/Ouput: Etat ouvert/ferm\u00e9 du bloc li\u00e9 (boolean)\n\n\n\n\nExemple1: Utilisation avec une var locale et le display hidden (cach\u00e9 par la css) :\n\n\n<h3>\n  <chevron [(hidden)]='contenu.hidden' class=\"pull-right\"></chevron>\n  Titre\n</h3>\n<div #contenu>\n  Mon contenu a cacher\n</div>\n\n\n\nExemple2: Utilisation avec une var typescript et ngIf (cach\u00e9 par le dom/js):\n\n\npublic mavar: boolean = false;\n\n\n<h3>\n  <chevron [(hidden)]='mavar' class=\"pull-right\"></chevron>\n  Titre\n</h3>\n<div *ngIf='mavar'>\n  Mon contenu a cacher\n</div>\n\n\n\nCKEditor\n\n\nLe widget ckeditor permet d'int\u00e9grer l'\u00e9diteur de texte simplement.\n\n\n\n\nUtilisation :\n\n\n<ckeditor [(content)]=\"article.chapeau\" [id]=\"'chapeau_text'\"\n          [rows]=\"4\" [disabled]=\"false\" [config]=\"config1\"></ckeditor>\n\n\n\n\n\ncontent\n : Le texte contenu par l'\u00e9diteur, li\u00e9 dans les deux sens afin de  mettre \u00e0 jour automatiquement la variable dans le composant appelant\n\n\nid\n: Un identifiant unique pour l'\u00e9diteur.\n\n\nrow\n: Permet de d\u00e9finir la hauteur de l'\u00e9diteur.\n\n\ndisabled\n: Si il est \u00e0 true, le ckeditor est remplac\u00e9 par une div affichant juste le contenu.\n                S'il est pass\u00e9 \u00e0 false par la suite, le ckeditor apparaitra.\n\n\nconfig\n: La configuration de l'\u00e9diteur (choix des actions possibles ou non).\n\n\n\n\nCorner Button\n\n\nDatatable\n\n\n\n\nExemple de template:\n\n\n<loader [condition]=\"data_tab\">\n  <datatable [data]=\"data_tab\" [structure]=\"structure\" [buttons]=\"buttons\" [parent_scope]=\"scope\"></datatable>\n</loader>`\n\n\n\nExemple de component:\n\n\npublic structure = [\n    { id: \"id\", label: \"ID\"},\n    { id: \"name\", label: \"Nom du champ\"}\n];\n\npublic buttons = [\n  {\n      text: 'Editer',\n      action: this.edit,\n      class: \"btn btn-warning\"\n  },\n  {\n      text: 'Supprimer',\n      action: this.confirmDelete,\n      class: \"btn btn-danger\"\n  }\n];\n//scope sur lequel appliquer les fonctions des boutons\npublic scope = this;\n\n//un exemple de donn\u00e9es\npublic data_tab = [{id: 1, name: \"Antoine\"}];\n\n\n\nDatePicker\n\n\nCe widget permet d'afficher un champ de texte qui fait apparaitre un calendrier.\n\n\n\n\nUtilisation :\n\n\n<datepicker [(ngModel)]=\"date_publi\" view-format=\"DD/MM/YYYY\" model-format=\"YYYY-MM-DD\"\n            first-week-day-sunday=\"false\"></datepicker>\n\n\n\n\n\nngModel\n: La valeur de le date.\n\n\nview-format\n: Le format de date tel qu'il sera affich\u00e9 dans le champ de texte.\n\n\nmodel-format\n: Le format de la date tel qu'il est dans la variable.\n\n\nfirst-week-day-sunday\n: Un bool\u00e9en permettant de pr\u00e9ciser pour l'affichagfe du calendrier si les semaines doivent commencer le dimanche (true) ou le lundi (false).\n\n\n\n\nFileUpload\n\n\n\n\nCe widget permet de faire un upload de fichier sur IBP et de recuperer le resultat du traitement\n\n\nExemple dans le template:\n\n\n<file-upload [container]=\"container_name\" (fileIsUploaded)=\"handleFileContent($event)\" [disabled]=\"!can_modif\"></file-upload>\n\n\n\nExemple dans le component:\n\n\nprivate handleFileContent(retour){\n  //ajouts des images au complements\n  if(retour.response && (retour.response.type === \"img\" || retour.response.type === \"image\") ){\n    //ici je cr\u00e9er un complement, contenant l'id de mon image sur ibp\n    this.new_cplt = new Complement({\n      type: this.complement_types.image.value,\n      id_l2_img : retour.response.content._id\n    });\n    this.complement_selected = null;\n    this.saveComplement();\n  }\n  //ajout du texte direct dans le texte de l'article\n  else if(retour.response && retour.response.type == \"text\"){\n    this.text_editor.instance.insertHtml('<p>'+\"PLACEHOLDER-\"+retour.response.content+'</p>');\n  }\n  else{\n    console.log('type de donn\u00e9e non g\u00e9r\u00e9');\n  }\n}\n\n\n\nGraph\n\n\nLoader\n\n\nLe widget loader permet de cacher facilement le contenu d'un bloc durant son chargement\n\n\n\n\n\n\ncondition\n : condition d'affichage de la roue de chargement, quand la condition est vrai on affiche le ng-content,mais tant que la condition est false on affiche le loader\n\n\ntype\n : Facultatif, Type de template d'affichage pour le widget, de base est une div, mais peut etre de type \nlist\n ou \npanel\n\n\n\n\nExemple:\n\n\n<loader [condition]=\"!ready\" [type]=\"'panel'\">\n  Mon Contenu\n</loader>\n\n\n\nMenu\n\n\nLe widget de menu permet l'affichage des barres constituant le menu. Les entr\u00e9es du menu s'affichent en fonction des permissions associ\u00e9es et des permissions de l'utilisateur. Les entr\u00e9es sont g\u00e9rables via la \npage de gestion des menus\n.\n\n\nMenu interne\n\n\nCe widget permet d'ajouter un second niveau de navigation, \u00e0 l'int\u00e9rieur d'un widge de page.\n\n\n\n\nIl se d\u00e9finie en lui fournissant au moins une liste d'item, exemple:\n\n\n    import {MenuInterneComponent, MenuItem, MenuItemBadge} from \"../_shared/_widgets/menu_interne/menu_interne\";\n    ...\n    private menu_items = [\n      new MenuItem({\n        icon: \"inbox\",\n        title: \"Inbox\",\n        badge: new MenuItemBadge({\n          class: \"success\",\n          number: 19\n        })\n      }),\n      new MenuItem({\n        icon: \"star\",\n        title: \"Starred\",\n        badge: new MenuItemBadge({\n          class: \"warning\",\n          number: 2\n        })\n      }),\n      new MenuItem({\n        icon: \"star\",\n        title: \"More\",\n        subitems: [\n          new MenuItem({\n            title: \"Spam\",\n            badge: new MenuItemBadge({\n              class: \"warning\",\n              number: 2\n            })\n          }),\n          new MenuItem({\n            title: \"Trash\"\n          })\n        ]\n      })\n    ];\n\n\n\n\net dans la template:\n\n\n    <menu_interne\n      [items]=\"menu_items\"\n      [title]=\"'Gestion Multi-M\u00e9dia'\"\n      (select)=\"menuClick($event)\"\n      [icon]=\"'plus'\"\n      [tooltip]=\"'Exporter vers un media'\"\n      (button)=\"newMedia($event)\"\n      (toggle)=\"menuToggle($event)\">\n    </menu_interne>\n\n\n\n\n\n\n[items]\n: \nArray\n - Une entree du tableau correspond a un element de la liste, on peut y ajouter des 'subitems' pour un niveau suppl\u00e9mentaire\n\n\n[title]\n: \nstring\n - Titre du menu\n\n\n(select)\n: \nEventEmitter\n - renvoi l'item selectionn\u00e9 lors d'un click\n\n\n[icon]\n: \nstring\n - classe d'icone du bouton de droite\n\n\n[tooltip]\n: \nstring\n - texte au survol du bouton de droite\n\n\n(button)\n: \nEventEmitter\n - renvoi true lors d'un click sur le bouton de droite\n\n\n(toggle)\n: \nEventEmitter\n - renvoi l'\u00e9tat (true= ouvert, false= ferm\u00e9) du menu lorsqu'on le ferme/ouvre\n\n\n\n\nMeta-handler\n\n\nIns\u00e8re un bloc de formulaire listant les champs issus de la table m\u00e9ta attach\u00e9s \u00e0 un type d\u2019entit\u00e9. Plus d'infos sur\nla gestion des metas dans le chapitre \nBackOffice Laravel5 - Metadata\n.\n\n\n\n\n<meta-handler [type]=\"entity.type\" [id_subject]=\"entity.id\" [id_version]=\"entity.version\"  [(metadatas)]=\"entity.metadatas\"></meta-handler>\n\n\n\n\n\n[type]\n: \nString\n - \nRequis\n - type d'entit\u00e9 cibl\u00e9e i.e: Element, Topic, User...\n\n\n[id_subject]\n: \nString\n - \nRequis\n - Identifiant (sans version) de l'entit\u00e9 en cours d'\u00e9dition.\n\n\n[id_version]\n: \nString\n -  Identifiant de version de l'entit\u00e9 en cours d'\u00e9dition.\n\n\n[(metadatas)]\n: \nArray[Meta]\n - Tableau de Metas.\n\n\n\n\nautocomplete\n\n\n\n\nLe composant d'autocomplete en Angular doit \u00eatre appel\u00e9 de la fa\u00e7on suivante:\n\n\n<autocomplete [config]='...' [data]='...' (valid)=\"function($event)\"></autocomplete>\n\n\n\n\n\n[data]\n: \nArray\n - tableau contenant les donn\u00e9es \u00e0 traiter par l'autocomplete\n\n\n[config]\n: \nObject\n - permet la config du widget, doit contenir:\n\n\nfieldName\n: \nString\n - nom de l'attribut du tableau \ndata\n qui sert \u00e0 l'affichage dans le champ\n\n\nfieldValue\n: \nString\n - nom de l'attribut du tableau \ndata\n qui fait office de valeur de retour par le widget (si vide, on renvoi l'object complet)\n\n\nbegin\n: \nNumber\n - nombre de caract\u00e8res \u00e0 entrer dans le champ avant que l'autocomplete ne se lance\n\n\ndefaultValue\n: \nString\n - valeur par d\u00e9faut \u00e0 ins\u00e9rer dans l'input d'autocompletion\n\n\nplaceholder\n: \nString\n - Placeholder du champ\n\n\n\n\n\n\n(valid)\n: \nFunction\n - fonction appel\u00e9e lorsque le champ est valide\n\n\n\n\nPager\n\n\nProgress Bar\n\n\nSearch Bar\n\n\nLa barre de recherche (1) permet d\u2019effectuer des recherches tr\u00e8s g\u00e9n\u00e9riques sur le site sans quitter la page en cours de visite. Les r\u00e9sultats sont d\u00e9livr\u00e9s dans un panel d\u00e9di\u00e9 (2).\n\n\n\n\nNB\u00a0: Il n\u2019est pas n\u00e9cessaire de cliquer sur le bouton de soumission (en forme de loupe) pour d\u00e9clencher la recherche. Cette derni\u00e8re sera automatiquement d\u00e9clench\u00e9e suite a une saisie de 3 caract\u00e8res ou plus et apr\u00e8s un d\u00e9lai de 400 millisecondes (sans quoi la requ\u00eate serait d\u00e9clench\u00e9e \u00e0 chaque lettre saisie).\n\n\nUtilisation :\n\n\n<search-bar></search-bar>\n\n\n\nStatus Bar\n\n\nPermet de faire une notification de status ressemblant \u00e0 growl\n\n\n\n\nUtilisation :\n\n\n<status-bar [icon]=\"'refresh'\" > Mise \u00e0 jour disponible </status-bar>\n<status-bar [icon]=\"'folder-open-o'\" [class]=\"'info'\" > Mise \u00e0 jour disponible </status-bar>\n<status-bar [icon]=\"'warning'\" [class]=\"'warning'\" > Mise \u00e0 jour importante disponible </status-bar>\n<status-bar [icon]=\"'warning'\" [class]=\"'danger'\" > Mise \u00e0 jour critique disponible </status-bar>\n\n\n\nSwitch\n\n\nTabPane ( Onglets )\n\n\n\n\nLe composant doit figurer dans le template  de la fa\u00e7on suivante :\n\n\n <tabpane>\n     <tab [tabtitle]=\"...\">\n       <mon-autre-component></mon-autre-component>\n     </tab>\n     <tab [tabtitle]=\"...\">\n       code html\n     </tab>\n </tabpane>\n\n\n\n\n\ntabpane\n sert \u00e0 encadrer la liste des onglets qui seront regroup\u00e9s\n\n\ntab\n sert \u00e0 d\u00e9finir un onglet en particulier\n\n\n[tabtitle]\n est le titre que portera l'onglet\n\n\nChaque balise tab peut contenir du html ou des composants Angular\n\n\n\n\n\n\n\n\nTouch Button\n\n\nPermet de cr\u00e9er un bouton flottant de style \"polymere\", contenant plusieurs autres boutons\n\n\n\n\nUtilisation:\n    \n\n       \n\n       \n\n      \n\n     \n\n\nTreeview\n\n\nLes composant de type \"Page\"\n\n\nLe Dashboard\n\n\nLe dashboard permet d'afficher une vue en onglets\n\n\n\n\nCes onglets sont d\u00e9finie comme cela, exemple :\n\n\n<dashboard-container>\n    <dashboard-tab [title]=\"'Statistique'\" [active]=\"true\" [icon]=\"'bar-chart-o'\"><dashboard-stats></dashboard-stats></dashboard-tab>\n\n  <dashboard-tab [title]=\"'Mes Articles'\" [icon]=\"'file-text'\">\n    ICI LE CONTENU DE MES ARTICLES\n  </dashboard-tab>\n\n  <dashboard-tab [title]=\"'Flux d\\'activit\u00e9'\" [icon]=\"'list'\">\n    ICI LE CONTENU DU FLUX\n  </dashboard-tab>\n</dashboard-container>\n\n\n\nles param\u00e9tres possible sont :\n\n \ntitle\n pour le title\n\n \nicon\n pour la classe font-awesome de l'icon (sans fa-)\n* \nactive\n pour definir celui actif par d\u00e9faut\nils sont ensuite utilis\u00e9s ensuite dans le menu \"gris\" et dans le fil d'ariane automatiquement\n\n\nDashboard / Statistique\n\n\nArticle / Liste\n\n\nInterface g\u00e9n\u00e9rale\n\n\nUne page de listing d\u2019articles suivra toujours la structure suivante\u00a0:\nUne barre de recherche simple, d\u00e9brayable en un formulaire avanc\u00e9.\n\n\n\n\nRecherche d'articles\n\n\nLa recherche d\u00e9clenchera une requ\u00eate Elasticsearch initialement param\u00e9tr\u00e9e comme suit\u00a0:\n\n\n\"query\": {\n        \"bool\": {\n            \"must\": [\n                {\n                \"multi_match\": {\n                    \"query\": \"Objet principal de la recherche\",\n                    \"fields\": [\"titre\", \"texte\"]\n                }\n            }],\n            \"should\": [{\n                \"match\": {\n                    \"topics\": \"Objet principal de la recherche\"\n                }\n            }],\n            \"filter\": []\n        }\n    }\n\n\n\nIl s'agit ici d'un exemple de requ\u00eate tr\u00e8s basique. Sans entrer dans les d\u00e9tails des requ\u00eates Elasticsearch \u00e9tablies par L\u00e9a-Pulse (qui feront l\u2019objet d\u2019au autre chapitre), il faut simplement retenir que la recherche portera en priorit\u00e9 sur le titre ainsi que le texte des articles, puis si des topics en relation \u00e0 cette requ\u00eate sont d\u00e9tect\u00e9s alors le score du document en question sera favorablement pond\u00e9r\u00e9. Dans le cas de crit\u00e8res de recherche purement filtrant (dates, \u00e9tat, statut\u2026) le score de pertinence n\u2019est pas impact\u00e9.\n\n\nDans le cas de la page \"Mes articles\" le filtre sur l'id de l'utilisateur courant sera automatiquement appliqu\u00e9.\n\n\nArticle / Edition\n\n\n\n\nGestion des utilisateurs\n\n\nLa page de listings des utilisateurs (gestion/user) permet de voir l'ensemble des utilisateurs du Back-office. La liste est contruite \u00e0 partir du composant \ndatatable\n.\n\n\n\n\nLe bouton \nEditer\n permet d'aller sur la page d'\u00e9dition de user (/gestion/user/edit/{id}).\n\n\nLe bouton \nSupprimer\n permet de supprimer un utilisateur apr\u00e8s la validation d'une \nbootbox\n qui s'affiche au clic sur le bouton.\n\n\nLe bouton \nAjouter\n permet d'aller sur la page d'\u00e9dition d'un user (/gestion/user/edit).\n\n\n\n\n\n\nSur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'un user:\n\n\n\n\nNom d'utilisateur\n: L'identifiant de connexion de l'utilisateur\n\n\nEmail\n: Email de l'utilisateur\n\n\nPr\u00e9nom\n et \nNom\n\n\nMot de passe\n et \nmot de passe (bis)\n servent \u00e0 changer le mot de passe de l'utilisateur. S'ils ne concordent pasou si l'un des deux est vide, il ne sont pas envoy\u00e9 lors de l'enregistrement.\n\n\nIBP\n: l'identifant de l'utilisateur sur la plateforme IBP. S'il n'en poss\u00e8de pas, un id lui sera ttribu\u00e9 \u00e0 la premi\u00e8re utilisation du service.\n\n\nGroupe\n: Permet de donner un ensemble de permissions \u00e0 un utilisateur.\n\n\nDroits de l'utilisateur\n: La liste de toutes les permissions attribuables. Si on est en mode \u00e9dition d'un user et qu'il appartient \u00e0 un groupe, les checkboxes reprenant les permissions du groupes sont coch\u00e9es et d\u00e9sactiv\u00e9es pour na pas \u00eatre modifi\u00e9es.\n\n\n\n\nGestion des groupes\n\n\nLa page de listings des groupes (gestion/groupe) permet de voir l'ensemble des groupes. La liste est contruite \u00e0 partir du composant \ndatatable\n.\n\n\n\n\nLe bouton \nEditer\n permet d'aller sur la page d'\u00e9dition de groupe (/gestion/groupe/edit/{id}).\n\n\nLe bouton \nSupprimer\n permet de supprimer un groupe apr\u00e8s la validation d'une \nbootbox\n qui s'affiche au clic sur le bouton.\n\n\nLe bouton \nAjouter\n permet d'aller sur la page d'\u00e9dition d'un groupe (/gestion/groupe/edit).\n\n\n\n\n\n\nSur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'un groupe:\n\n\n\n\nNom de groupe\n\n\nPermissions\n: La liste des permissiosns \u00e0 cocher pour les accorder \u00e0 l'ensemble du groupe\n\n\n\n\nGestion des permissions\n\n\nLa page de listings des permissions (gestion/permission) permet de voir l'ensemble des permissions. La liste est contruite \u00e0 partir du composant \ndatatable\n.\n\n\n\n\nLe bouton \nEditer\n permet d'aller sur la page d'\u00e9dition de permission (/gestion/permission/edit/{id}).\n\n\nLe bouton \nSupprimer\n permet de supprimer une permission apr\u00e8s la validation d'une \nbootbox\n qui s'affiche au clic sur le bouton.\n\n\nLe bouton \nAjouter\n permet d'aller sur la page d'\u00e9dition d'une permission (/gestion/permission/edit).\n\n\n\n\n\n\nSur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'une permission:\n\n\n\n\nNom\n: Le nom de la permission qui sera utilis\u00e9 pour faire les tests d'acc\u00e8s\n\n\nDescription\n: Une courte description de la permission qui sera utilis\u00e9e pour l'affichage dans les listings\n\n\n\n\nGestion des menus\n\n\nLa page de listings des entr\u00e9es du menu (gestion/menu) permet de voir l'ensemble des pages accessibles via le menu. La liste est contruite \u00e0 partir du composant \ndatatable\n.\n\n\n\n\nLe bouton \nEditer\n permet d'aller sur la page d'\u00e9dition de l'entr\u00e9e choisie (/gestion/menu/edit/{id}).\n\n\nLe bouton \nSupprimer\n permet de supprimer un \u00e9l\u00e9ment du menu apr\u00e8s la validation d'une \nbootbox\n qui s'affiche au clic sur le bouton. Si l'\u00e9lement avait des sous-menu, ceux-ci sont rapatri\u00e9s sur le menu de premier niveau.\n\n\nLe bouton \nAjouter\n permet d'aller sur la page d'\u00e9dition d'une entr\u00e9e (/gestion/menu/edit).\n\n\n\n\n\n\nSur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations d'une entr\u00e9e de menu:\n\n\n\n\nTitre\n: Le nom qui sera affich\u00e9 dans le menu.\n\n\nParent\n: L'\u00e9l\u00e9ment auquel ratacher l'entr\u00e9e en cours d'\u00e9dition. Si \nAucun\n est selectionn\u00e9, l'\u00e9l\u00e9ment sera affich\u00e9 en tant que menu principal.\n\n\nIc\u00f4ne de menu\n: L'ic\u00f4ne \u00e0 afficher avant le titre et \u00e0 piocher dans la librairie \nFont-Awesome\n.\n\n\nPermission\n: Le choix de la permission n\u00e9cessaire pour afficher l'\u00e9l\u00e9ment. Si \nAucune\n est choisie, l'\u00e9l\u00e9ment sera visible pour tout les utilisateurs.\n\n\nRoute\n: La route vers laquelle pointera l'\u00e9l\u00e9ment en cours d'\u00e9dition.\n\n\nParam\u00e8tres de route\n: Une liste de param\u00e8tres \u00e0 associer \u00e0 la route.\n\n\nOrdre\n: Un entier servant \u00e0 d\u00e9terminer la position d'un \u00e9l\u00e9ment par rapport aux autres \u00e9l\u00e9ments ayant le m\u00eame parent.\n\n\n\n\nGestion multisites\n\n\nLa page de gestion multisites (gestion/multisites) permet de lister, \u00e9diter et supprimer les diff\u00e9rentes familles. La liste est contruite \u00e0 partir du composant \ndatatable\n.\n\n\n\n\nLe bouton \nEditer\n permet d'aller sur la page d'\u00e9dition de la famille (/gestion/multisites/edit/{id}).\n\n\nLe bouton \nSupprimer\n permet de supprimer un \u00e9l\u00e9ment apr\u00e8s l'entr\u00e9e du bon identifiant sur un prompt \nbootbox\n qui s'affiche au clic sur le bouton. Si la famille poss\u00e9dait des sites, ils seront \u00e9galement supprim\u00e9s. Il s'agit donc d'une action \u00e0 risque.\n\n\nLe bouton \nAjouter\n permet d'aller sur la page d'\u00e9dition d'une famile (/gestion/multisites/edit).\n\n\n\n\n\n\nSur la page de cr\u00e9ation, on peut saisir les informations de famille\n\n\n\n\nNom de la famille\n: rien \u00e0 rajouter\n\n\nIdentifiant\n: Un identifiant de 5 lettres maximum qui servira dans le path des topics associ\u00e9s (ex: \nrp\n:www:politique pour la R\u00e9publique des Pyr\u00e9n\u00e9es)\n\n\n\n\nDans le cas o\u00f9 l'on \u00e9dite une famille existante, une datatable contenant les sites associ\u00e9s \u00e0 la famille. Le fonctionnement pour les sites est le m\u00eame que pour les familles.\n\n\nIframe\n\n\nLe composant iframe permet d'afficher le contenu d'une page externe comme si il faisait partie de Lea Pulse.\nL'appel de ce composant se fait suivant deux types de routes lors de la \ncr\u00e9ation d'une entr\u00e9e dans le menu\n :\n\n\n\n\nEn utilisant la route \nIframe\n et en ajoutant un param\u00e8tre nomm\u00e9 \nurl\n. Cela g\u00e9n\u00e8rera une url du type \n/#/iframe?url=mon_url\n\n\nEn utilisant la route \nIframeModule\n et en ajoutant les param\u00e8tres \nurl\n et \nmoduleName\n. Cela g\u00e9n\u00e8rera une url de la forme \n/#/iframe/moduleName\n\n\n\n\nTopic / Liste\n\n\n\n\nEn entr\u00e9e, le composant de liste des topics r\u00e9cup\u00e8re les familles et sites depuis la collection \nconfig\n de la base \nlea_pulse_back\n.\nL'affichage de la liste des topics se fait par le biais de deux \nSelect\n corespondant aux r\u00e9sultats de ces requ\u00eates.\n\n\nLa s\u00e9lection de la famille de topics fera appara\u00eetre le selecteur pour les sites, qui, une fois s\u00e9lectionn\u00e9 permettra d'afficher uniquement les topics dont la correspondance sera faite entre la valeur des champs et le path des topics.\n\n\nExemple: \nsi\n Famille = \"lor\" (Lorraine) \net\n Site = \"mp\" (Metz Plage) \nalors\n path des topics affich\u00e9s = \nlor:mp:(...)\n\n\nPour en savoir plus sur la g\u00e9n\u00e9ration de l'arbre des topics, voir la documentation sur le widget \ntreeview\n.\n\n\nTopic / Cr\u00e9ation\n\n\n\n\nA l'initialisation, le composant r\u00e9cup\u00e8re:\n\n\n\n\nle titre, le path, l'URI et la cl\u00e9 primaire \n(id_hierarchie)\n de tout les topics stock\u00e9 en cache LocalStorage et Mongo, ou en faisant une requ\u00eate sur la base MySQL depuis le BO Laravel5 si les donn\u00e9es ne sont pas en cache.\n\n\nles types de topic depuis la variable de conf \nsfConfig\n du BO Legacy (/bo_api/apps/module/l2_pulse/actions/getSfConfigAction.class.php)\n\n\n\n\nPour enregister les topics (\nsaveTopic()\n), le composant effectue une requ\u00eate Form sur /lea_hierarchie/updateSimplifie.\n\n\nPour supprimer un topic (\ndeleteTopic()\n), la requ\u00eate est faite en Post sur /lea_hierarchie/delete.\n\n\nTopic / Param\u00e9trage\n\n\n\n\nSi l'URL ne contient pas d'ID (\ntopic/edit\n), on renvoie l'utilisateur sur la page de \ncr\u00e9ation\n de topic.\n\n\nA l'initialisation du composant, on r\u00e9cup\u00e8re la configuration depuis le BO Laravel5 qui contient toutes les metas qui sont requises par le site. Tous les sites ont une configuration commune, et \u00e9ventuellement une configuration sp\u00e9ciale qui leur est propre.\n\n\nLe composant g\u00e9n\u00e8re automatiquement les fieldset et les champs en fonction de la configuration r\u00e9cup\u00e9r\u00e9e.\nLa configuration se pr\u00e9sente sous la forme suivante:\n\n\n[\n  {\n    titre: \"Le titre qui apparaitra dans le fieldset\",\n    id: \"un_identifiant_unique_sans_espace\",\n    fields: [ //La liste des champs qui seront group\u00e9s ensemble\n      {\n        champ: \"Le champ tel qu'il est dans la BDD. Pour les metas, utiliser la formulation meta.AAA\",\n        label: \"Le label tel qu'il appraitra dans le formulaire\",\n        type: \"le type de champ: string pour un input normal ou boolean pour une case \u00e0 cocher\",\n        disabled: \"G\u00e9n\u00e9ralement \u00e0 false, ce champ permet de d\u00e9sactiver un input.\",\n        heritable: \"Bool\u00e9en permettant de savoir si le champ peut h\u00e9riter de la valeur de son topic parent.\n                    Cela change aussi l'affichage du champ\"\n      },\n      {\n        champ: \"titre\",\n        label: \"Titre\",\n        type: \"string\",\n        disabled: false,\n        heritable: false\n      },\n      {\n        champ: \"path\",\n        label: \"Path\",\n        type: \"string\",\n        disabled: true,\n        heritable: false\n      },\n      {\n        champ: \"meta.associable\",\n        label: \"Associable\"\n        type: \"boolean\",\n        disabled: false,\n        heritable: false\n      },\n      {\n        champ: \"meta.type_page\",\n        label: \"Type page topic\",\n        type: \"string\",\n        disabled: false,\n        heritable: true\n      },\n      ....\n    ]\n  },\n  {\n    ...\n  },\n  ...\n]\n\n\n\n\nUn champ \nvalue\n est ajout\u00e9 \u00e0 chaque \u00e9l\u00e9ment \nfield\n lors de l'appel au webservice pour connaitre la valeur actuelle.\nSi le champ est h\u00e9ritable,  on ajoute aussi un champ \nparentValue\n afin de savoir si le champ h\u00e9rite des valeurs de son topic parent.\n\n\nLes Services\n\n\nBreadcrumb ( Fil d'ariane )\n\n\nPour mettre en place un fil d'ariane, le service \"services/breadcrumb\" est disponible.\n\n\nFonctions disponibles:\n\n\n\n\nshow\n: permet de re-afficher le dernier etat du fil d'ariane (s'il y en a un)\n\n\nhide\n: permet de cacher le fil d'ariane\n\n\nclean\n: permet de renvoyer l'\u00e9tat par d\u00e9faut\n\n\nsetBreadcrumb\n: permet de d\u00e9finir le tableau des liens du fil d'ariane\n\n\n\n\nsetBreadcrumb, prend en parametre un tableau, o\u00f9 pour chaque entr\u00e9e les options disponibles sont:\n\n\n\n\ntitle\n:string, D\u00e9finie le texte affich\u00e9 pour le lien (exemple: \"Article\")\n\n\nicon\n:,string D\u00e9finie la classe fontawesome a appliquer au lien (exemple: \"file\")\n\n\nurl\n:,string D\u00e9finie une url externe, \u00e0 afficher dans une iframe (exemple: \"http://www.sdv.fr\")\n\n\nrouterlink\n:string, D\u00e9finie une route interne, pour appeler un composant (exemple: \"Home\")\n\n\nrouterlinkparams\n:object, D\u00e9finie les parametres a envoyer a cette route (exemple: {id: '2'})\n\n\n\n\nExample d'utilisation dans un composant\n\n\n `import {BreadcrumbService} from \"../../_core/_services/breadcrumb\";\n ....\n\n constructor(\n   ...\n   private _bread_serv: BreadcrumbService)\n     ...\n     //on place le fil d'arine voulu\n     this._bread_serv.setBreadcrumb([\n       {\n         \"title\": \"Article\"\n       },\n       {\n         \"title\": \"Edition\",\n         \"class\":\"active\"\n       }\n     ]);\n...}\n\n//On remet le fil d'ariane de base en sortant de la page\nngOnDestroy(){\n  this._bread_serv.clean();\n}`\n\n\n\nBootbox (pop-in d'alert)\n\n\nPermet de cr\u00e9er des pop-in de confirmation ou d'alerte dans la style de bootstrap\n\n\n\n\nFonction disponibles:\n\n\n\n\nalert\n: \nmsg\n Pour afficher un message\n\n\nconfirm\n: \nmsg\n, \ncallback(resultat)\n Oui ou non\n\n\nprompt\n:  \nmsg\n, \ncallback(reponse)\n Poser une question ouverte\n\n\ndialog\n: Pour faire un dialog custom, voir les propri\u00e9t\u00e9s disponible \nDoc bootbox\n\n\n\n\nExemple:\n    import {BootboxService} from '../../_core/_services/bootbox';\n    ...\n    constructor(\n      private _bootbox: BootboxService,\n      ...\n\n\nconfirmDelete(id: number) {\n    this._bootbox.confirm('Etes-vous s\u00fbr de vouloir supprimer le bloc ' + id + ' ?', (result: Boolean) => {\n        if (result) {\n            //il a dis oui!, je supprime le bloc avec cet id\n        }\n        else{\n          // il a dis non!\n        }\n    });\n}\n\n\n\n__\n\n\nStatic Loader\n\n\nPermet d'int\u00e9grer des scripts js ou css dans la page en v\u00e9rifiant qu'ils ne sont pas int\u00e9grer plusieurs fois\nDe plus on peut attentre le resultats avant d'effectuer d'autres actions\n\n\nConfig\n\n\nLe service de config correspond au service homonyme du BO L5. Deux m\u00e9thodes y sont d\u00e9finies:\n\n\nsetConfig(type: string, value: any);\ngetConfig(type: string);\n\n\n\n\n\nsetConfig\n : permet de cr\u00e9er ou de mettre \u00e0 jour un document de type \ntype\n et de valeur \nvalue\n\n\ngetConfig\n : permet de r\u00e9cup\u00e9rer un tableau d'objet de type \ntype\n.\n\n\n\n\nExemple d'utilisation:\n\n\n`this._config_service.getConfig('sites').subscribe(sites =>\n{\n    this.allSites = sites;\n} });``\n\n\n\nPour une impl\u00e9mentation plus d\u00e9taill\u00e9e, voir le composant \nTopic / List\n.\n\n\nUtilisateur\n\n\nCe service permet d'afficher des donn\u00e9es sur les utilisateurs sans avoir \u00e0 chaque fois \u00e0 faire une jointure sur cette table.\nCe service est bootstrapp\u00e9 d\u00e8s le lancement de l'application (il ne doit donc pas figur\u00e9 dans vos providers)\n\n\n\n\nVariables:\n\nusers_info\n : Ce tableau permet d'acceder a des donn\u00e9es de user directement avec son id (par exemple dans un template). Le user doit avoir \u00e9t\u00e9 charg\u00e9 par une des m\u00e9thodes au pr\u00e9alable dans l'appli.\n\n\nM\u00e9thodes:\n\n\n\n\ngetUtilisateurInfo(id):Observable\n : permet de charger les donn\u00e9es d'un user en particulier\n\n\ngetMultipleUserInfo(id_liste):ReplaySubject\n: permet de charger les donn\u00e9es de plusieurs utilisateurs en une requete\n\n\ngetAllUserInfo(): Observable\n : permet de charger toutes les donn\u00e9es utilisateurs (n\u00e9cessaire pour les pages admins)\n\n\nupdateUser(user: Utilisateur, password: string, password_bis: string)\n: permet de mettre \u00e0 jours les donn\u00e9es d'un user\n\n\ndeleteUser(user: Utilisateur)\n : permt de supprimer un utilisateurs, ainsi que ces caches\n\n\nsetIbpUserId(user: Utilisateur)\n : permet de mettre \u00e0 jour le user IBP d'un compte utilisateur\n\n\n\n\nExemple d'utilisation:\n\n\nimport {UtilisateurService} from \".../sfguard/_services/utilisateur\";\n...\nconstructor(\n    private _users: UtilisateurService, ...\n\n\n\nTemplate:\n\n\n<span> Le prenom d'utilisateur {{_users.info[elem.user_id].sf_guard_user_profile.first_name}} et sa famille {{_users.info[elem.user_id].sf_guard_user_profile.last_name}} </span>\n\n\n\n__\n\n\nNotification\n\n\nHttp Lea\n\n\nPermet de contacter les api du serveur l\u00e9a legacy\n\n\nHttp L5\n\n\nPermet de contacter les api du serveur laravel\n\n\nTwitter\n\n\nLe service Twitter permet de r\u00e9cup\u00e9rer les Top Trends actuels en France depuis l'API officiel.\nL'API n\u00e9cessite une authentification OAuth2, un compte li\u00e9 est donc requis pour communiquer avec l'API.\n\n\nInformations du compte Twitter pour Lea Pulse:\n\n\n\n\nLogin\n : lea_pulse / equipe-rnd@sdv.fr\n\n\nMot de passe\n : leapulse\n\n\n\n\nLa communication avec l'API se fait depuis le BO Laravel. Les tokens d'authentification sont \u00e0 dupliquer dans le fichier .env depuis le fichier .envexample.\n\n\nLes directives\n\n\nAuth Router\n\n\nLe routeur authentifi\u00e9 permet de verifier si le changement de page demand\u00e9 correspond \u00e0 une route publique.\nDans le cas contraire, on v\u00e9rifie si l'utilisateur est connect\u00e9.\nSinon on le redirige vers la page de Login, en enregistrant la route demand\u00e9 pour une redirection future.\n\n\nLes pipes\n\n\nLes typings\n\n\nLes typings permettent d'indiquer \u00e0 Typescript et aux IDE, le contenu des fonctions et variables qui ne seront disponibles qu'apr\u00e9s la compilation Javascript.\nC'est le cas de jQuery et d'autres plugins.",
            "title": "BackOffice Angular2"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#installation",
            "text": "Pour commencer \u00e0 developper il vous faudra un environnement node > 5  Puis vous devrez installer les d\u00e9pendances par \"npm install --dev\"  Un serveur de d\u00e9veloppement est disponible par: \"npm start\", ainsi vos d\u00e9veloppements seront compil\u00e9s \u00e0 la vol\u00e9e",
            "title": "Installation"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#ligne-de-commande",
            "text": "npm install  => pour installer les lib pr\u00e9-requis  npm update  => pour mettre \u00e0 jour les libs  npm start  => pour lancer l\u2019appli (ouvre automatiquement un navigateur synchronis\u00e9, sinon voir localhost:8080)  npm run gen  => lancer le g\u00e9n\u00e9rateur de code (pour cr\u00e9er des pages de cruds, g\u00e9n\u00e9rer les routes, etc\u2026)  ng generate  => g\u00e9n\u00e9ration des components, services, pipes, directives, modules  ng build  => cr\u00e9er une version compil\u00e9, non minifi\u00e9 (accessible en local sur lea-pulse-spa.docker.dev)  ng build --prod  => cr\u00e9er une version compil\u00e9, obscursifi\u00e9 et minifi\u00e9 (accessible en local sur lea-pulse-spa.docker.dev)",
            "title": "Ligne de commande"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#le-decoupage-de-lapplication",
            "text": "Pour commencer, voici comment se d\u00e9coupe notre application\n(Certains de ces dossiers ne sont pas versionn\u00e9 et seront uniquement pr\u00e9sent une fois qu'ils auront \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9)  /bin  => contient des scripts js execut\u00e9 en node uniquement sur le post de d\u00e9v ( ce sont des facilitateurs )\n  /generator\n   /generators\n      => contient les scripts js de g\u00e9n\u00e9ration de code typescripts (scann\u00e9 automatiquement par \u201cnpm run gen\u201d)\n   /templates\n      => contient les fichier 'type' de g\u00e9n\u00e9ration de code  /demo  contient un slideshow de demo de l'appli  /dist/  (ce dossier est versionn\u00e9 pour etre utilis\u00e9 par apache)\n  => contient le r\u00e9sultat final de la compilation  du typescript vers javascript et les fichiers de mapping pour le debug\n  app-xxx.js => l'application compl\u00e9te convertie en js\n  app-xxx.js.map => le fichier de mapping permettant de retrouv\u00e9 la ligne de TS \u00e0 l'origine d'un bug JS\n  vendors-xxx.js => le fichier regrouppant les librariers tierce compil\u00e9 ensemble\n  vendors-xxx.js.map => le fichier de mapping pour d\u00e9bugger les librairies  /docs  contient la version g\u00e9n\u00e9r\u00e9 de la documentation  /e2e  contient la configuration des test end-to-end  /node_modules  contient les scripts import\u00e9s par npm\n( ce dossier n'est pas versionn\u00e9, les fichiers qui nous int\u00e9resse l\u00e0 dedans seront int\u00e9gr\u00e9 au build)  /src/app  /_core\n  contient les classes devant etre charg\u00e9 une seul fois (notamment les services), et faisant partie du core\n\n/_modules\n  contient les diff\u00e9rents modules li\u00e9 a un client\n\n/_shared\n  contient les classes pouvant etre charg\u00e9 plusieurs fois (commes les components, pipes, directives et models) faisant partie du core\n\n/<module>\n  contient un module de base fournie avec chaque instance de pulse.\n  chacun d'eux peuvent contenir\n\n  /_widgets\n    pour les composants partag\u00e9\n\n  /_directives\n\n  /_pipes\n\n  /_services\n\n  /_models\n\n  /<page>\n\n  <module>.module.ts\n    d\u00e9finie le contenu de ce module et les diff\u00e9rent import necessaire\n\n  <module>.routing.ts\n    d\u00e9finie les diff\u00e9rente routes de l'application  /src/assets/  contient les libs non accessibles par un gestionnaire de paquets, et du coup qui sont versionn\u00e9 chez nous  /src/environments/  contient des conf sp\u00e9cial par environnement (inutilis\u00e9 chez nous, car chaque 'version' correspond a un seul env)  /typings  (sera remplac\u00e9 petit a petit par node_modules/@types)\n   => contient les descriptions typescript (.tsd) des scripts uniquement pr\u00e9sent \u00e0 l\u2019\u00e9x\u00e9cution du javascript, certain sont install\u00e9 manuellent\n     /browser\n         => contient les tsd import\u00e9s par typings pour les scripts ex\u00e9cutable dans le navigateur\n     /main\n         => contient les tsd import\u00e9 par typings pour les scripts node",
            "title": "Le D\u00e9coupage de l'application"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-lignes-de-commandes",
            "text": "Lancement du serveur de developpement  G\u00e9n\u00e9ration d'un module  ng g module modules/mon-module --routing",
            "title": "Les lignes de commandes"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-generateurs-de-code",
            "text": "Angular-CLI  le programme angular-cli fournie quelques g\u00e9n\u00e9rateur de code, vous permettant la cr\u00e9ation de:\n *  ng g module \n *  ng g component \n *  ng g service \n *  ng g pipe \n *  ng g directive  ceux-ci peuvent etre execut\u00e9 \u00e0 la racine du projet, ou dans un module  CRUD  Le g\u00e9n\u00e9rateur de CRUD vous permet de cr\u00e9er une page liste (avec datatable) et une page d'edition, ainsi que le service n\u00e9cessaire, a partir d'un model  npm run gen crud  C'est alors que plusieurs questions sont pos\u00e9es:   Quelle URL voulez-vous pour votre page de CRUD ? :  l'url \u00e0 rentrer est relative et s'ins\u00e9rera dans le dossier 'app/components'. Exemple: si l'on choisi l'url 'gestion/blocs', cela correspondra \u00e0 la route du routeur, et les fichiers seront cr\u00e9\u00e9s dans 'app/components/gestions/blocs/.'.  Sur quel mod\u00e8le se base cette page ? :  rentrer le nom du fichier mod\u00e8le sans l'extension (ex: app/models/bloc.ts => \"bloc\").  A quelle API Laravel voulez-vous vous connecter ? :  rentrer le nom de la route RESTful choisi dans Laravel. Par exemple, si votre route est d\u00e9finie en Laravel comme ceci : \"Route::resource('bloc', 'BlocController');\", alors vous pouvez rentrer \"bloc\".  Quels champs du mod\u00e8le souhaitez-vous cacher ? :  choisir les variables dans le mod\u00e8le que vous ne souhaitez par afficher dans la  Datatable . Le champ '_id' est cach\u00e9 par d\u00e9faut. Il est possible de ne rentrer aucune information et donc de tout afficher, en appuyant simplement sur Entr\u00e9e.   Mod\u00e8les  Voici un exemple de mod\u00e8le \u00e0 utiliser pour le g\u00e9n\u00e9rateur de CRUD.    export class Bloc {\n    public _id: string = \"\";\n    public title: string = \"\";\n    public type: string = \"\";\n    public model: string = \"\";\n    public content: string = \"\";\n\n  public constructor(obj?: any) {\n    this._id = obj && obj._id || null;\n    this.title = obj && obj.title || \"\";\n    this.type = obj && obj.type || \"html\";\n    this.model = obj && obj.model || \"\";\n    this.content = obj && obj.content || \"\";\n    }\n  }  __  Templates  Les templates utilis\u00e9s sont pr\u00e9sent dans '/bin/generator/templates/crud'. Il y a 6 templates donc 6 fichiers \u00e9crits:    components.ts.base  : le composant d'entr\u00e9e du CRUD, avec le layout principal de la page (de base ne contient que le router).    componentsIndex.ts.base  : le composant de liste du CRUD, avec la  Datatable  de tout les \u00e9l\u00e9ments correspondant au mod\u00e8le.      componentsEdit.ts.base  : le composant d'\u00e9dition d'un \u00e9l\u00e9ment.      service.ts.base  : le service qui communiquera avec l'API Laravel.    module.ts.base  : le module de chargement de ces diff\u00e9rents widgets    routing.ts.base  : la d\u00e9finition des routes du module    Structure  Dans les composants g\u00e9n\u00e9r\u00e9s, la  Datatable  est automatiquement construite en fonction des variables du mod\u00e8le et des champs choisi pour \u00eatre cach\u00e9 au moment de l'ex\u00e9cution du g\u00e9n\u00e9rateur.  Il est n\u00e9anmoins possible de la modifier manuellement. Pour cela, il faut se rendre dans les deux composants g\u00e9n\u00e9r\u00e9s, et d\u00e9commenter la d\u00e9claration de structure.\nIl suffit de la remplir en respectant le pattern : 'id' => nom de variable du mod\u00e8le, 'label' => nom affich\u00e9 sur la page.  Cette personnalisation de structure est possible pour le composant d'affichage des \u00e9l\u00e9ments ainsi que pour le composant d'\u00e9dition.",
            "title": "Les g\u00e9n\u00e9rateurs de code"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-widgets-generiques",
            "text": "Bloc-Card  Bloc de contenu sous forme de carte   <bloc-card class=\"col-lg-4\" [data]=\"{type:'divers', title:'Titre de mon paragraphe', content:'Ici on peut raconter plein de chose'}\"></bloc-card>   title : pour changer le titre du bloc  content : pour changer le contenu du bloc  type : peut prendre la valeur: paragraphe, image, divers, autre2, autre3 (ceci le fera changer de couleur)   BreadCrumb ( Fil d'ariane )  Ce widget ne doit s'integrer qu'une fois dans la page.\nPour son utilisation voir \u00e0 travers le service  BreadCrumb  Button 3D  Permet de faire des boutons poussoir en 3d   Utilisation :  <button3d [icon]=\"'check'\" [class]=\"'success'\" [size]=\"'btn-sm'\" (click)=\"afficheBootbox('alert')\" > Valider</button3d>\n<button3d [icon]=\"'code-fork'\" [class]=\"'danger'\" (click)=\"afficheBootbox('alert')\" > Pousser en prod</button3d>\n<button3d [icon]=\"'cloud'\" [class]=\"'primary'\" [size]=\"'btn-lg'\" (click)=\"afficheBootbox('alert')\" > Envoyer dans le cloud</button3d>  Chevron  Le widget chevron permet de cacher facilement le contenu d'un bloc    hidden  : Input/Ouput: Etat ouvert/ferm\u00e9 du bloc li\u00e9 (boolean)   Exemple1: Utilisation avec une var locale et le display hidden (cach\u00e9 par la css) :  <h3>\n  <chevron [(hidden)]='contenu.hidden' class=\"pull-right\"></chevron>\n  Titre\n</h3>\n<div #contenu>\n  Mon contenu a cacher\n</div>  Exemple2: Utilisation avec une var typescript et ngIf (cach\u00e9 par le dom/js):  public mavar: boolean = false;  <h3>\n  <chevron [(hidden)]='mavar' class=\"pull-right\"></chevron>\n  Titre\n</h3>\n<div *ngIf='mavar'>\n  Mon contenu a cacher\n</div>  CKEditor  Le widget ckeditor permet d'int\u00e9grer l'\u00e9diteur de texte simplement.   Utilisation :  <ckeditor [(content)]=\"article.chapeau\" [id]=\"'chapeau_text'\"\n          [rows]=\"4\" [disabled]=\"false\" [config]=\"config1\"></ckeditor>   content  : Le texte contenu par l'\u00e9diteur, li\u00e9 dans les deux sens afin de  mettre \u00e0 jour automatiquement la variable dans le composant appelant  id : Un identifiant unique pour l'\u00e9diteur.  row : Permet de d\u00e9finir la hauteur de l'\u00e9diteur.  disabled : Si il est \u00e0 true, le ckeditor est remplac\u00e9 par une div affichant juste le contenu.\n                S'il est pass\u00e9 \u00e0 false par la suite, le ckeditor apparaitra.  config : La configuration de l'\u00e9diteur (choix des actions possibles ou non).   Corner Button  Datatable   Exemple de template:  <loader [condition]=\"data_tab\">\n  <datatable [data]=\"data_tab\" [structure]=\"structure\" [buttons]=\"buttons\" [parent_scope]=\"scope\"></datatable>\n</loader>`  Exemple de component:  public structure = [\n    { id: \"id\", label: \"ID\"},\n    { id: \"name\", label: \"Nom du champ\"}\n];\n\npublic buttons = [\n  {\n      text: 'Editer',\n      action: this.edit,\n      class: \"btn btn-warning\"\n  },\n  {\n      text: 'Supprimer',\n      action: this.confirmDelete,\n      class: \"btn btn-danger\"\n  }\n];\n//scope sur lequel appliquer les fonctions des boutons\npublic scope = this;\n\n//un exemple de donn\u00e9es\npublic data_tab = [{id: 1, name: \"Antoine\"}];  DatePicker  Ce widget permet d'afficher un champ de texte qui fait apparaitre un calendrier.   Utilisation :  <datepicker [(ngModel)]=\"date_publi\" view-format=\"DD/MM/YYYY\" model-format=\"YYYY-MM-DD\"\n            first-week-day-sunday=\"false\"></datepicker>   ngModel : La valeur de le date.  view-format : Le format de date tel qu'il sera affich\u00e9 dans le champ de texte.  model-format : Le format de la date tel qu'il est dans la variable.  first-week-day-sunday : Un bool\u00e9en permettant de pr\u00e9ciser pour l'affichagfe du calendrier si les semaines doivent commencer le dimanche (true) ou le lundi (false).   FileUpload   Ce widget permet de faire un upload de fichier sur IBP et de recuperer le resultat du traitement  Exemple dans le template:  <file-upload [container]=\"container_name\" (fileIsUploaded)=\"handleFileContent($event)\" [disabled]=\"!can_modif\"></file-upload>  Exemple dans le component:  private handleFileContent(retour){\n  //ajouts des images au complements\n  if(retour.response && (retour.response.type === \"img\" || retour.response.type === \"image\") ){\n    //ici je cr\u00e9er un complement, contenant l'id de mon image sur ibp\n    this.new_cplt = new Complement({\n      type: this.complement_types.image.value,\n      id_l2_img : retour.response.content._id\n    });\n    this.complement_selected = null;\n    this.saveComplement();\n  }\n  //ajout du texte direct dans le texte de l'article\n  else if(retour.response && retour.response.type == \"text\"){\n    this.text_editor.instance.insertHtml('<p>'+\"PLACEHOLDER-\"+retour.response.content+'</p>');\n  }\n  else{\n    console.log('type de donn\u00e9e non g\u00e9r\u00e9');\n  }\n}  Graph  Loader  Le widget loader permet de cacher facilement le contenu d'un bloc durant son chargement    condition  : condition d'affichage de la roue de chargement, quand la condition est vrai on affiche le ng-content,mais tant que la condition est false on affiche le loader  type  : Facultatif, Type de template d'affichage pour le widget, de base est une div, mais peut etre de type  list  ou  panel   Exemple:  <loader [condition]=\"!ready\" [type]=\"'panel'\">\n  Mon Contenu\n</loader>  Menu  Le widget de menu permet l'affichage des barres constituant le menu. Les entr\u00e9es du menu s'affichent en fonction des permissions associ\u00e9es et des permissions de l'utilisateur. Les entr\u00e9es sont g\u00e9rables via la  page de gestion des menus .  Menu interne  Ce widget permet d'ajouter un second niveau de navigation, \u00e0 l'int\u00e9rieur d'un widge de page.   Il se d\u00e9finie en lui fournissant au moins une liste d'item, exemple:      import {MenuInterneComponent, MenuItem, MenuItemBadge} from \"../_shared/_widgets/menu_interne/menu_interne\";\n    ...\n    private menu_items = [\n      new MenuItem({\n        icon: \"inbox\",\n        title: \"Inbox\",\n        badge: new MenuItemBadge({\n          class: \"success\",\n          number: 19\n        })\n      }),\n      new MenuItem({\n        icon: \"star\",\n        title: \"Starred\",\n        badge: new MenuItemBadge({\n          class: \"warning\",\n          number: 2\n        })\n      }),\n      new MenuItem({\n        icon: \"star\",\n        title: \"More\",\n        subitems: [\n          new MenuItem({\n            title: \"Spam\",\n            badge: new MenuItemBadge({\n              class: \"warning\",\n              number: 2\n            })\n          }),\n          new MenuItem({\n            title: \"Trash\"\n          })\n        ]\n      })\n    ];  et dans la template:      <menu_interne\n      [items]=\"menu_items\"\n      [title]=\"'Gestion Multi-M\u00e9dia'\"\n      (select)=\"menuClick($event)\"\n      [icon]=\"'plus'\"\n      [tooltip]=\"'Exporter vers un media'\"\n      (button)=\"newMedia($event)\"\n      (toggle)=\"menuToggle($event)\">\n    </menu_interne>   [items] :  Array  - Une entree du tableau correspond a un element de la liste, on peut y ajouter des 'subitems' pour un niveau suppl\u00e9mentaire  [title] :  string  - Titre du menu  (select) :  EventEmitter  - renvoi l'item selectionn\u00e9 lors d'un click  [icon] :  string  - classe d'icone du bouton de droite  [tooltip] :  string  - texte au survol du bouton de droite  (button) :  EventEmitter  - renvoi true lors d'un click sur le bouton de droite  (toggle) :  EventEmitter  - renvoi l'\u00e9tat (true= ouvert, false= ferm\u00e9) du menu lorsqu'on le ferme/ouvre   Meta-handler  Ins\u00e8re un bloc de formulaire listant les champs issus de la table m\u00e9ta attach\u00e9s \u00e0 un type d\u2019entit\u00e9. Plus d'infos sur\nla gestion des metas dans le chapitre  BackOffice Laravel5 - Metadata .   <meta-handler [type]=\"entity.type\" [id_subject]=\"entity.id\" [id_version]=\"entity.version\"  [(metadatas)]=\"entity.metadatas\"></meta-handler>   [type] :  String  -  Requis  - type d'entit\u00e9 cibl\u00e9e i.e: Element, Topic, User...  [id_subject] :  String  -  Requis  - Identifiant (sans version) de l'entit\u00e9 en cours d'\u00e9dition.  [id_version] :  String  -  Identifiant de version de l'entit\u00e9 en cours d'\u00e9dition.  [(metadatas)] :  Array[Meta]  - Tableau de Metas.   autocomplete   Le composant d'autocomplete en Angular doit \u00eatre appel\u00e9 de la fa\u00e7on suivante:  <autocomplete [config]='...' [data]='...' (valid)=\"function($event)\"></autocomplete>   [data] :  Array  - tableau contenant les donn\u00e9es \u00e0 traiter par l'autocomplete  [config] :  Object  - permet la config du widget, doit contenir:  fieldName :  String  - nom de l'attribut du tableau  data  qui sert \u00e0 l'affichage dans le champ  fieldValue :  String  - nom de l'attribut du tableau  data  qui fait office de valeur de retour par le widget (si vide, on renvoi l'object complet)  begin :  Number  - nombre de caract\u00e8res \u00e0 entrer dans le champ avant que l'autocomplete ne se lance  defaultValue :  String  - valeur par d\u00e9faut \u00e0 ins\u00e9rer dans l'input d'autocompletion  placeholder :  String  - Placeholder du champ    (valid) :  Function  - fonction appel\u00e9e lorsque le champ est valide   Pager  Progress Bar  Search Bar  La barre de recherche (1) permet d\u2019effectuer des recherches tr\u00e8s g\u00e9n\u00e9riques sur le site sans quitter la page en cours de visite. Les r\u00e9sultats sont d\u00e9livr\u00e9s dans un panel d\u00e9di\u00e9 (2).   NB\u00a0: Il n\u2019est pas n\u00e9cessaire de cliquer sur le bouton de soumission (en forme de loupe) pour d\u00e9clencher la recherche. Cette derni\u00e8re sera automatiquement d\u00e9clench\u00e9e suite a une saisie de 3 caract\u00e8res ou plus et apr\u00e8s un d\u00e9lai de 400 millisecondes (sans quoi la requ\u00eate serait d\u00e9clench\u00e9e \u00e0 chaque lettre saisie).  Utilisation :  <search-bar></search-bar>  Status Bar  Permet de faire une notification de status ressemblant \u00e0 growl   Utilisation :  <status-bar [icon]=\"'refresh'\" > Mise \u00e0 jour disponible </status-bar>\n<status-bar [icon]=\"'folder-open-o'\" [class]=\"'info'\" > Mise \u00e0 jour disponible </status-bar>\n<status-bar [icon]=\"'warning'\" [class]=\"'warning'\" > Mise \u00e0 jour importante disponible </status-bar>\n<status-bar [icon]=\"'warning'\" [class]=\"'danger'\" > Mise \u00e0 jour critique disponible </status-bar>  Switch  TabPane ( Onglets )   Le composant doit figurer dans le template  de la fa\u00e7on suivante :   <tabpane>\n     <tab [tabtitle]=\"...\">\n       <mon-autre-component></mon-autre-component>\n     </tab>\n     <tab [tabtitle]=\"...\">\n       code html\n     </tab>\n </tabpane>   tabpane  sert \u00e0 encadrer la liste des onglets qui seront regroup\u00e9s  tab  sert \u00e0 d\u00e9finir un onglet en particulier  [tabtitle]  est le titre que portera l'onglet  Chaque balise tab peut contenir du html ou des composants Angular     Touch Button  Permet de cr\u00e9er un bouton flottant de style \"polymere\", contenant plusieurs autres boutons   Utilisation:\n     \n        \n        \n       \n       Treeview",
            "title": "Les widgets g\u00e9n\u00e9riques"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-composant-de-type-page",
            "text": "Le Dashboard  Le dashboard permet d'afficher une vue en onglets   Ces onglets sont d\u00e9finie comme cela, exemple :  <dashboard-container>\n    <dashboard-tab [title]=\"'Statistique'\" [active]=\"true\" [icon]=\"'bar-chart-o'\"><dashboard-stats></dashboard-stats></dashboard-tab>\n\n  <dashboard-tab [title]=\"'Mes Articles'\" [icon]=\"'file-text'\">\n    ICI LE CONTENU DE MES ARTICLES\n  </dashboard-tab>\n\n  <dashboard-tab [title]=\"'Flux d\\'activit\u00e9'\" [icon]=\"'list'\">\n    ICI LE CONTENU DU FLUX\n  </dashboard-tab>\n</dashboard-container>  les param\u00e9tres possible sont :   title  pour le title   icon  pour la classe font-awesome de l'icon (sans fa-)\n*  active  pour definir celui actif par d\u00e9faut\nils sont ensuite utilis\u00e9s ensuite dans le menu \"gris\" et dans le fil d'ariane automatiquement  Dashboard / Statistique  Article / Liste  Interface g\u00e9n\u00e9rale  Une page de listing d\u2019articles suivra toujours la structure suivante\u00a0:\nUne barre de recherche simple, d\u00e9brayable en un formulaire avanc\u00e9.   Recherche d'articles  La recherche d\u00e9clenchera une requ\u00eate Elasticsearch initialement param\u00e9tr\u00e9e comme suit\u00a0:  \"query\": {\n        \"bool\": {\n            \"must\": [\n                {\n                \"multi_match\": {\n                    \"query\": \"Objet principal de la recherche\",\n                    \"fields\": [\"titre\", \"texte\"]\n                }\n            }],\n            \"should\": [{\n                \"match\": {\n                    \"topics\": \"Objet principal de la recherche\"\n                }\n            }],\n            \"filter\": []\n        }\n    }  Il s'agit ici d'un exemple de requ\u00eate tr\u00e8s basique. Sans entrer dans les d\u00e9tails des requ\u00eates Elasticsearch \u00e9tablies par L\u00e9a-Pulse (qui feront l\u2019objet d\u2019au autre chapitre), il faut simplement retenir que la recherche portera en priorit\u00e9 sur le titre ainsi que le texte des articles, puis si des topics en relation \u00e0 cette requ\u00eate sont d\u00e9tect\u00e9s alors le score du document en question sera favorablement pond\u00e9r\u00e9. Dans le cas de crit\u00e8res de recherche purement filtrant (dates, \u00e9tat, statut\u2026) le score de pertinence n\u2019est pas impact\u00e9.  Dans le cas de la page \"Mes articles\" le filtre sur l'id de l'utilisateur courant sera automatiquement appliqu\u00e9.  Article / Edition   Gestion des utilisateurs  La page de listings des utilisateurs (gestion/user) permet de voir l'ensemble des utilisateurs du Back-office. La liste est contruite \u00e0 partir du composant  datatable .   Le bouton  Editer  permet d'aller sur la page d'\u00e9dition de user (/gestion/user/edit/{id}).  Le bouton  Supprimer  permet de supprimer un utilisateur apr\u00e8s la validation d'une  bootbox  qui s'affiche au clic sur le bouton.  Le bouton  Ajouter  permet d'aller sur la page d'\u00e9dition d'un user (/gestion/user/edit).    Sur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'un user:   Nom d'utilisateur : L'identifiant de connexion de l'utilisateur  Email : Email de l'utilisateur  Pr\u00e9nom  et  Nom  Mot de passe  et  mot de passe (bis)  servent \u00e0 changer le mot de passe de l'utilisateur. S'ils ne concordent pasou si l'un des deux est vide, il ne sont pas envoy\u00e9 lors de l'enregistrement.  IBP : l'identifant de l'utilisateur sur la plateforme IBP. S'il n'en poss\u00e8de pas, un id lui sera ttribu\u00e9 \u00e0 la premi\u00e8re utilisation du service.  Groupe : Permet de donner un ensemble de permissions \u00e0 un utilisateur.  Droits de l'utilisateur : La liste de toutes les permissions attribuables. Si on est en mode \u00e9dition d'un user et qu'il appartient \u00e0 un groupe, les checkboxes reprenant les permissions du groupes sont coch\u00e9es et d\u00e9sactiv\u00e9es pour na pas \u00eatre modifi\u00e9es.   Gestion des groupes  La page de listings des groupes (gestion/groupe) permet de voir l'ensemble des groupes. La liste est contruite \u00e0 partir du composant  datatable .   Le bouton  Editer  permet d'aller sur la page d'\u00e9dition de groupe (/gestion/groupe/edit/{id}).  Le bouton  Supprimer  permet de supprimer un groupe apr\u00e8s la validation d'une  bootbox  qui s'affiche au clic sur le bouton.  Le bouton  Ajouter  permet d'aller sur la page d'\u00e9dition d'un groupe (/gestion/groupe/edit).    Sur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'un groupe:   Nom de groupe  Permissions : La liste des permissiosns \u00e0 cocher pour les accorder \u00e0 l'ensemble du groupe   Gestion des permissions  La page de listings des permissions (gestion/permission) permet de voir l'ensemble des permissions. La liste est contruite \u00e0 partir du composant  datatable .   Le bouton  Editer  permet d'aller sur la page d'\u00e9dition de permission (/gestion/permission/edit/{id}).  Le bouton  Supprimer  permet de supprimer une permission apr\u00e8s la validation d'une  bootbox  qui s'affiche au clic sur le bouton.  Le bouton  Ajouter  permet d'aller sur la page d'\u00e9dition d'une permission (/gestion/permission/edit).    Sur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations de base d'une permission:   Nom : Le nom de la permission qui sera utilis\u00e9 pour faire les tests d'acc\u00e8s  Description : Une courte description de la permission qui sera utilis\u00e9e pour l'affichage dans les listings   Gestion des menus  La page de listings des entr\u00e9es du menu (gestion/menu) permet de voir l'ensemble des pages accessibles via le menu. La liste est contruite \u00e0 partir du composant  datatable .   Le bouton  Editer  permet d'aller sur la page d'\u00e9dition de l'entr\u00e9e choisie (/gestion/menu/edit/{id}).  Le bouton  Supprimer  permet de supprimer un \u00e9l\u00e9ment du menu apr\u00e8s la validation d'une  bootbox  qui s'affiche au clic sur le bouton. Si l'\u00e9lement avait des sous-menu, ceux-ci sont rapatri\u00e9s sur le menu de premier niveau.  Le bouton  Ajouter  permet d'aller sur la page d'\u00e9dition d'une entr\u00e9e (/gestion/menu/edit).    Sur la page d'\u00e9diton/cr\u00e9ation, on peut saisir les informations d'une entr\u00e9e de menu:   Titre : Le nom qui sera affich\u00e9 dans le menu.  Parent : L'\u00e9l\u00e9ment auquel ratacher l'entr\u00e9e en cours d'\u00e9dition. Si  Aucun  est selectionn\u00e9, l'\u00e9l\u00e9ment sera affich\u00e9 en tant que menu principal.  Ic\u00f4ne de menu : L'ic\u00f4ne \u00e0 afficher avant le titre et \u00e0 piocher dans la librairie  Font-Awesome .  Permission : Le choix de la permission n\u00e9cessaire pour afficher l'\u00e9l\u00e9ment. Si  Aucune  est choisie, l'\u00e9l\u00e9ment sera visible pour tout les utilisateurs.  Route : La route vers laquelle pointera l'\u00e9l\u00e9ment en cours d'\u00e9dition.  Param\u00e8tres de route : Une liste de param\u00e8tres \u00e0 associer \u00e0 la route.  Ordre : Un entier servant \u00e0 d\u00e9terminer la position d'un \u00e9l\u00e9ment par rapport aux autres \u00e9l\u00e9ments ayant le m\u00eame parent.   Gestion multisites  La page de gestion multisites (gestion/multisites) permet de lister, \u00e9diter et supprimer les diff\u00e9rentes familles. La liste est contruite \u00e0 partir du composant  datatable .   Le bouton  Editer  permet d'aller sur la page d'\u00e9dition de la famille (/gestion/multisites/edit/{id}).  Le bouton  Supprimer  permet de supprimer un \u00e9l\u00e9ment apr\u00e8s l'entr\u00e9e du bon identifiant sur un prompt  bootbox  qui s'affiche au clic sur le bouton. Si la famille poss\u00e9dait des sites, ils seront \u00e9galement supprim\u00e9s. Il s'agit donc d'une action \u00e0 risque.  Le bouton  Ajouter  permet d'aller sur la page d'\u00e9dition d'une famile (/gestion/multisites/edit).    Sur la page de cr\u00e9ation, on peut saisir les informations de famille   Nom de la famille : rien \u00e0 rajouter  Identifiant : Un identifiant de 5 lettres maximum qui servira dans le path des topics associ\u00e9s (ex:  rp :www:politique pour la R\u00e9publique des Pyr\u00e9n\u00e9es)   Dans le cas o\u00f9 l'on \u00e9dite une famille existante, une datatable contenant les sites associ\u00e9s \u00e0 la famille. Le fonctionnement pour les sites est le m\u00eame que pour les familles.  Iframe  Le composant iframe permet d'afficher le contenu d'une page externe comme si il faisait partie de Lea Pulse.\nL'appel de ce composant se fait suivant deux types de routes lors de la  cr\u00e9ation d'une entr\u00e9e dans le menu  :   En utilisant la route  Iframe  et en ajoutant un param\u00e8tre nomm\u00e9  url . Cela g\u00e9n\u00e8rera une url du type  /#/iframe?url=mon_url  En utilisant la route  IframeModule  et en ajoutant les param\u00e8tres  url  et  moduleName . Cela g\u00e9n\u00e8rera une url de la forme  /#/iframe/moduleName   Topic / Liste   En entr\u00e9e, le composant de liste des topics r\u00e9cup\u00e8re les familles et sites depuis la collection  config  de la base  lea_pulse_back .\nL'affichage de la liste des topics se fait par le biais de deux  Select  corespondant aux r\u00e9sultats de ces requ\u00eates.  La s\u00e9lection de la famille de topics fera appara\u00eetre le selecteur pour les sites, qui, une fois s\u00e9lectionn\u00e9 permettra d'afficher uniquement les topics dont la correspondance sera faite entre la valeur des champs et le path des topics.  Exemple:  si  Famille = \"lor\" (Lorraine)  et  Site = \"mp\" (Metz Plage)  alors  path des topics affich\u00e9s =  lor:mp:(...)  Pour en savoir plus sur la g\u00e9n\u00e9ration de l'arbre des topics, voir la documentation sur le widget  treeview .  Topic / Cr\u00e9ation   A l'initialisation, le composant r\u00e9cup\u00e8re:   le titre, le path, l'URI et la cl\u00e9 primaire  (id_hierarchie)  de tout les topics stock\u00e9 en cache LocalStorage et Mongo, ou en faisant une requ\u00eate sur la base MySQL depuis le BO Laravel5 si les donn\u00e9es ne sont pas en cache.  les types de topic depuis la variable de conf  sfConfig  du BO Legacy (/bo_api/apps/module/l2_pulse/actions/getSfConfigAction.class.php)   Pour enregister les topics ( saveTopic() ), le composant effectue une requ\u00eate Form sur /lea_hierarchie/updateSimplifie.  Pour supprimer un topic ( deleteTopic() ), la requ\u00eate est faite en Post sur /lea_hierarchie/delete.  Topic / Param\u00e9trage   Si l'URL ne contient pas d'ID ( topic/edit ), on renvoie l'utilisateur sur la page de  cr\u00e9ation  de topic.  A l'initialisation du composant, on r\u00e9cup\u00e8re la configuration depuis le BO Laravel5 qui contient toutes les metas qui sont requises par le site. Tous les sites ont une configuration commune, et \u00e9ventuellement une configuration sp\u00e9ciale qui leur est propre.  Le composant g\u00e9n\u00e8re automatiquement les fieldset et les champs en fonction de la configuration r\u00e9cup\u00e9r\u00e9e.\nLa configuration se pr\u00e9sente sous la forme suivante:  [\n  {\n    titre: \"Le titre qui apparaitra dans le fieldset\",\n    id: \"un_identifiant_unique_sans_espace\",\n    fields: [ //La liste des champs qui seront group\u00e9s ensemble\n      {\n        champ: \"Le champ tel qu'il est dans la BDD. Pour les metas, utiliser la formulation meta.AAA\",\n        label: \"Le label tel qu'il appraitra dans le formulaire\",\n        type: \"le type de champ: string pour un input normal ou boolean pour une case \u00e0 cocher\",\n        disabled: \"G\u00e9n\u00e9ralement \u00e0 false, ce champ permet de d\u00e9sactiver un input.\",\n        heritable: \"Bool\u00e9en permettant de savoir si le champ peut h\u00e9riter de la valeur de son topic parent.\n                    Cela change aussi l'affichage du champ\"\n      },\n      {\n        champ: \"titre\",\n        label: \"Titre\",\n        type: \"string\",\n        disabled: false,\n        heritable: false\n      },\n      {\n        champ: \"path\",\n        label: \"Path\",\n        type: \"string\",\n        disabled: true,\n        heritable: false\n      },\n      {\n        champ: \"meta.associable\",\n        label: \"Associable\"\n        type: \"boolean\",\n        disabled: false,\n        heritable: false\n      },\n      {\n        champ: \"meta.type_page\",\n        label: \"Type page topic\",\n        type: \"string\",\n        disabled: false,\n        heritable: true\n      },\n      ....\n    ]\n  },\n  {\n    ...\n  },\n  ...\n]  Un champ  value  est ajout\u00e9 \u00e0 chaque \u00e9l\u00e9ment  field  lors de l'appel au webservice pour connaitre la valeur actuelle.\nSi le champ est h\u00e9ritable,  on ajoute aussi un champ  parentValue  afin de savoir si le champ h\u00e9rite des valeurs de son topic parent.",
            "title": "Les composant de type \"Page\""
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-services",
            "text": "Breadcrumb ( Fil d'ariane )  Pour mettre en place un fil d'ariane, le service \"services/breadcrumb\" est disponible.  Fonctions disponibles:   show : permet de re-afficher le dernier etat du fil d'ariane (s'il y en a un)  hide : permet de cacher le fil d'ariane  clean : permet de renvoyer l'\u00e9tat par d\u00e9faut  setBreadcrumb : permet de d\u00e9finir le tableau des liens du fil d'ariane   setBreadcrumb, prend en parametre un tableau, o\u00f9 pour chaque entr\u00e9e les options disponibles sont:   title :string, D\u00e9finie le texte affich\u00e9 pour le lien (exemple: \"Article\")  icon :,string D\u00e9finie la classe fontawesome a appliquer au lien (exemple: \"file\")  url :,string D\u00e9finie une url externe, \u00e0 afficher dans une iframe (exemple: \"http://www.sdv.fr\")  routerlink :string, D\u00e9finie une route interne, pour appeler un composant (exemple: \"Home\")  routerlinkparams :object, D\u00e9finie les parametres a envoyer a cette route (exemple: {id: '2'})   Example d'utilisation dans un composant   `import {BreadcrumbService} from \"../../_core/_services/breadcrumb\";\n ....\n\n constructor(\n   ...\n   private _bread_serv: BreadcrumbService)\n     ...\n     //on place le fil d'arine voulu\n     this._bread_serv.setBreadcrumb([\n       {\n         \"title\": \"Article\"\n       },\n       {\n         \"title\": \"Edition\",\n         \"class\":\"active\"\n       }\n     ]);\n...}\n\n//On remet le fil d'ariane de base en sortant de la page\nngOnDestroy(){\n  this._bread_serv.clean();\n}`  Bootbox (pop-in d'alert)  Permet de cr\u00e9er des pop-in de confirmation ou d'alerte dans la style de bootstrap   Fonction disponibles:   alert :  msg  Pour afficher un message  confirm :  msg ,  callback(resultat)  Oui ou non  prompt :   msg ,  callback(reponse)  Poser une question ouverte  dialog : Pour faire un dialog custom, voir les propri\u00e9t\u00e9s disponible  Doc bootbox   Exemple:\n    import {BootboxService} from '../../_core/_services/bootbox';\n    ...\n    constructor(\n      private _bootbox: BootboxService,\n      ...  confirmDelete(id: number) {\n    this._bootbox.confirm('Etes-vous s\u00fbr de vouloir supprimer le bloc ' + id + ' ?', (result: Boolean) => {\n        if (result) {\n            //il a dis oui!, je supprime le bloc avec cet id\n        }\n        else{\n          // il a dis non!\n        }\n    });\n}  __  Static Loader  Permet d'int\u00e9grer des scripts js ou css dans la page en v\u00e9rifiant qu'ils ne sont pas int\u00e9grer plusieurs fois\nDe plus on peut attentre le resultats avant d'effectuer d'autres actions  Config  Le service de config correspond au service homonyme du BO L5. Deux m\u00e9thodes y sont d\u00e9finies:  setConfig(type: string, value: any);\ngetConfig(type: string);   setConfig  : permet de cr\u00e9er ou de mettre \u00e0 jour un document de type  type  et de valeur  value  getConfig  : permet de r\u00e9cup\u00e9rer un tableau d'objet de type  type .   Exemple d'utilisation:  `this._config_service.getConfig('sites').subscribe(sites =>\n{\n    this.allSites = sites;\n} });``  Pour une impl\u00e9mentation plus d\u00e9taill\u00e9e, voir le composant  Topic / List .  Utilisateur  Ce service permet d'afficher des donn\u00e9es sur les utilisateurs sans avoir \u00e0 chaque fois \u00e0 faire une jointure sur cette table.\nCe service est bootstrapp\u00e9 d\u00e8s le lancement de l'application (il ne doit donc pas figur\u00e9 dans vos providers)   Variables: users_info  : Ce tableau permet d'acceder a des donn\u00e9es de user directement avec son id (par exemple dans un template). Le user doit avoir \u00e9t\u00e9 charg\u00e9 par une des m\u00e9thodes au pr\u00e9alable dans l'appli.  M\u00e9thodes:   getUtilisateurInfo(id):Observable  : permet de charger les donn\u00e9es d'un user en particulier  getMultipleUserInfo(id_liste):ReplaySubject : permet de charger les donn\u00e9es de plusieurs utilisateurs en une requete  getAllUserInfo(): Observable  : permet de charger toutes les donn\u00e9es utilisateurs (n\u00e9cessaire pour les pages admins)  updateUser(user: Utilisateur, password: string, password_bis: string) : permet de mettre \u00e0 jours les donn\u00e9es d'un user  deleteUser(user: Utilisateur)  : permt de supprimer un utilisateurs, ainsi que ces caches  setIbpUserId(user: Utilisateur)  : permet de mettre \u00e0 jour le user IBP d'un compte utilisateur   Exemple d'utilisation:  import {UtilisateurService} from \".../sfguard/_services/utilisateur\";\n...\nconstructor(\n    private _users: UtilisateurService, ...  Template:  <span> Le prenom d'utilisateur {{_users.info[elem.user_id].sf_guard_user_profile.first_name}} et sa famille {{_users.info[elem.user_id].sf_guard_user_profile.last_name}} </span>  __  Notification  Http Lea  Permet de contacter les api du serveur l\u00e9a legacy  Http L5  Permet de contacter les api du serveur laravel  Twitter  Le service Twitter permet de r\u00e9cup\u00e9rer les Top Trends actuels en France depuis l'API officiel.\nL'API n\u00e9cessite une authentification OAuth2, un compte li\u00e9 est donc requis pour communiquer avec l'API.  Informations du compte Twitter pour Lea Pulse:   Login  : lea_pulse / equipe-rnd@sdv.fr  Mot de passe  : leapulse   La communication avec l'API se fait depuis le BO Laravel. Les tokens d'authentification sont \u00e0 dupliquer dans le fichier .env depuis le fichier .envexample.",
            "title": "Les Services"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-directives",
            "text": "Auth Router  Le routeur authentifi\u00e9 permet de verifier si le changement de page demand\u00e9 correspond \u00e0 une route publique.\nDans le cas contraire, on v\u00e9rifie si l'utilisateur est connect\u00e9.\nSinon on le redirige vers la page de Login, en enregistrant la route demand\u00e9 pour une redirection future.",
            "title": "Les directives"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-pipes",
            "text": "",
            "title": "Les pipes"
        },
        {
            "location": "/01_Developpeur/01_BackOffice_Angular2/index.html#les-typings",
            "text": "Les typings permettent d'indiquer \u00e0 Typescript et aux IDE, le contenu des fonctions et variables qui ne seront disponibles qu'apr\u00e9s la compilation Javascript.\nC'est le cas de jQuery et d'autres plugins.",
            "title": "Les typings"
        },
        {
            "location": "/01_Developpeur/02_BackOffice_Legacy/index.html",
            "text": "BackOffice Legacy\n\n\n\n\n\n\nLes Modeles\n\n\ndescription YAML\n\n\nTopic / Liste\n\n\n\n\n\n\nLes Modules\n\n\nIBP\n\n\nPulse\n\n\n\n\n\n\nLes Utilisateurs\n\n\nSession\n\n\n\n\n\n\n\n\n\n\nLes Modeles\n\n\ndescription YAML\n\n\nTopic / Liste\n\n\nLes Modules\n\n\nIBP\n\n\nPulse\n\n\nLes Utilisateurs\n\n\nSession",
            "title": "BackOffice Legacy"
        },
        {
            "location": "/01_Developpeur/02_BackOffice_Legacy/index.html#les-modeles",
            "text": "description YAML  Topic / Liste",
            "title": "Les Modeles"
        },
        {
            "location": "/01_Developpeur/02_BackOffice_Legacy/index.html#les-modules",
            "text": "IBP  Pulse",
            "title": "Les Modules"
        },
        {
            "location": "/01_Developpeur/02_BackOffice_Legacy/index.html#les-utilisateurs",
            "text": "Session",
            "title": "Les Utilisateurs"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html",
            "text": "BackOffice Laravel5\n\n\nNous vous recommandons d'avoir fait les premiers tutoriaux Laravel5 avant de poursuivre \nTuto First Start\n \u00e0 SDV vous pouvez aussi consulter les vid\u00e9os laracasts\n\n\nLe backoffice Laravel5 fait le lien entre les services du BO Angular2 et du BO Legacy.\nIl permet \u00e9galement les requ\u00eates sur les collection de MongoDB.\n\n\nSommaire\n\n\n\n\n\n\nModules\n\n\nCommands\n\n\nImports\n\n\n\n\n\n\nPublication\n\n\nEvenements\n\n\n\n\n\n\nControllers\n\n\nConfig\n\n\nTopic\n\n\n\n\n\n\nServices\n\n\nCache\n\n\n\n\n\n\nElasticsearch\n\n\nInstallation et Configuration\n\n\nDocker\n\n\n\u00c9tat du serveur ES\n\n\n\n\n\n\nClusters, nodes, shards et indices\n\n\nIndexation et mapping\n\n\nIndexation ES\n\n\nIndexation Des documents\n\n\n\n\n\n\nConnexion Laravel 5 / Elasticsearch\n\n\nSandbox sur Laravel 5\n\n\nCommunication Laravel 5 / Elasticsearch\n\n\n\n\n\n\nMetadata\n\n\nRepr\u00e9sentation simplifi\u00e9e du mod\u00e8le de donn\u00e9es du syst\u00e8me de meta\n\n\nD\u00e9claration d'une Meta\n\n\nDescription du champ settings\n\n\nCollecte et acheminement des donn\u00e9es\n\n\n\n\n\n\n\n\n\n\nModules\n\n\nPour ajouter des modules \u00e0 votre installation de laravel, ceux-ci devront etre dans app/Modules et seront load\u00e9 en psr4.\nIl faudra simplement faire un composer dump-autoload pour qu'il soit pris en compte.\n\n\nVous pouvez inclure aussi des routes, grace au fichier app/Http/modules.routes.php\n\n\nCommands\n\n\nImports\n\n\nLes scripts d'import doivent fonctionner en mode authentifi\u00e9, pour cela il est n\u00e9cessaire de connaitre un user (en g\u00e9n\u00e9ral 'import').\n\n\nuse Illuminate\\Support\\Facades\\Auth;\nuse ApiPulse\\Models\\Lea\\sfGuardUser;\n...\n$user_import = sfGuardUser::where('username','import')->first();\n//on s'authentifie en tant que ce user\nAuth::login($user_import);\n\n//plus tard dans le script on pourra retrouver ce user gr\u00e2ce \u00e0:\n$user = Auth::user();\n\n\n\nPublication\n\n\nLa publication est bas\u00e9 sur le systeme d'evenement de Laravel et sur les files de Redis.\n\n\nPrincipe de base, lors de l'enregistrement d'un article (c'est aussi valable pour les blocs, colonnes etc..):\n\n\n\n\nOn mets \u00e0 jours les donn\u00e9es back de l'article (les principales dans mysql, les metas dans mongo)\n\n\nOn insere l'ID de cet article dans une file redis (dans Legacy avec SdvRedisClient et dans L5 avec Predis)\n\n\nCeci mets fin \u00e0 la partie synchrone de l'enregistrement\n\n\nEn paral\u00e9lle, un daemon lanc\u00e9 avec \"artisan redis:subscribe \n\" va d\u00e9piler cette file\n\n\nPour chaque ID r\u00e9cup\u00e9rer, il va cr\u00e9er un evenement d'une classe sp\u00e9cial li\u00e9 \u00e0 cette file\n\n\nChacun de ces evenements est li\u00e9 \u00e0 un ou plusieurs listeners, qui vont chacun etre ex\u00e9cut\u00e9\n\n\nLes listeners d\u00e9finissent quels traitements sont \u00e0 faire pour la publication (ceci permet de pouvoir definir plusieurs r\u00e9action pour une seul evenement)\n\n\n\n\nEvenements\n\n\nLes \u00e9venements sont d\u00e9finies dans ApiPulse/Events, ou dans des modules Modules/Nom_Module/Events.\n\n\nLes listeners sont dans ApiPulse/Listeners, ou dans des modules Modules/Nom_Module/Listeners.\n\n\nLes liaisons entre les 2 sont dans Providers/EventServiceProvider.php ou dans les modules Modules/Nom_Module/Providers/EventServiceProvider.php.\n\n\nControllers\n\n\nConfig\n\n\nLe controller config permet de stocker des infos de configuration dans la collection \nconfig\n de la base \nlea_pulse_back\n.\n\n\nDeux fonctions sont d\u00e9finies dans le controller:\n\n\n\n\nget($type)\n : permet de r\u00e9cup\u00e9rer le document dont le type correspond\n\n\nset($type, Request $req)\n : permet de cr\u00e9er ou mettre un jour un document correspondant au type donn\u00e9.\n\n\n\n\nTopic\n\n\nLe controller de Topic permet d'acc\u00e9der aux informations concernant les topics en lecture.\n\n\nOn peut :\n\n\n\n\nacc\u00e9der \u00e0 la liste des topics en entier (avec une mise en cache des donn\u00e9es) via \ngetTopicList()\n.\n\n\nr\u00e9cup\u00e9rer les informations d'un seul topic via \ngetTopic($id)\n.\n\n\nr\u00e9cup\u00e9rer un liste pagin\u00e9e d'articles li\u00e9s au topic demand\u00e9 via \ngetTopicElements($id, $type = null, $perPage=20)\n\n\n$id\n correcpond \u00e0 l'identifant de la hi\u00e9rarchie,\n\n\n$type\n correcpond \u00e0 la version des articles voulus (en ligne, brouillon, ...),\n\n\n$perPage\n est le nombre d'article qui nous sont retourn\u00e9 par page.\n\n\n\n\n\n\nr\u00e9cup\u00e9rer la configuration du topic et les veleurs associ\u00e9es pour le param\u00e9trage de celui-ci via \ngetMetas($id)\n.\n\n\n\n\nServices\n\n\nCache\n\n\nIl est possible de mettre en cache certaines donn\u00e9es de la base MySQL dans la base Mongo.\nLe fonctionnement de la fonction \nget()\n du service de cache est de chercher des donn\u00e9es r\u00e9centes dans la collection de cache, de les mettre \u00e0 jour si la date de dernier update du contenu n'est pas suffisamment r\u00e9cente ou de cr\u00e9er un nouveau document si le cache n'existe pas.\n\n\nLa syntaxe est la suivante:\n\n\nuse ApiPulse\\Services\\cacheService as Cache;\n\nCache::get($id, $max_minute, $request);\n\n\n\n\n\n$id\n: \nString\n - Identifiant du document dans lequel chercher, mettre \u00e0 jour ou cr\u00e9er le cache.\n\n\n$max_minute\n: \nInt\n - Nombre de minutes maximum de derni\u00e8re update du cache avant qu'il ne soit consid\u00e9r\u00e9 comme p\u00e9rim\u00e9 (ce qui entraine une nouvelle requ\u00eate MySQL)\n\n\n$request\n: \nRequest\n - Requ\u00eate \u00e0 effectu\u00e9e sur la base MySQL (dans le cas de cr\u00e9ation/mise \u00e0 jour)\n\n\n\n\nExemple:\n\n\nCache::get(\"TopicList\", 5, Topic::select('id_hierarchie', 'titre', 'path', 'uri'));\n\n\n\nElasticsearch\n\n\nInstallation et Configuration\n\n\nDocker\n\n\nL\u2019instance Elasticsearch (\u2018ES\u2019 pour la suite de la documentation) docker est bas\u00e9e sur \nl\u2019image officielle 2.3\n\nLe docker file est dans \n/data/builds/elasticsearch\n\nLes configs (g\u00e9n\u00e9rale et logs) se situent dans le sous-dossier \u2018conf\u2019.\n\n\nUne fois le docker-compose lanc\u00e9 le conteneur doit \u00eatre mapp\u00e9 comme suit\u00a0:\n\n0.0.0.0:9200->9200/tcp, 9300/tcp\n et doit porter le nom suivant\u00a0: \nlea_pulse_elasticsearch\n\n\n\u00c9tat du serveur ES\n\n\nPour v\u00e9rifier que le serveur r\u00e9pond bien, il suffit d\u2019ex\u00e9cuter\u00a0: \u2018\ncurl localhost:9200\n\u2019. Ou simplement d\u2019y acc\u00e9der via votre navigateur pr\u00e9f\u00e9r\u00e9.\n\n\n  {\n    name:\u00a0\"lea-pulse-node-01\",\n    cluster_name:\u00a0\"lea-pulse-dev\",\n    version:\u00a0\n    {\n      number:\u00a0\"2.3.3\",\n      build_hash:\u00a0\"218bdf10790eef486ff2c41a3df5cfa32dadcfde\",\n      build_timestamp:\u00a0\"2016-05-17T15:40:04Z\",\n      build_snapshot:\u00a0false,\n      lucene_version:\u00a0\"5.5.0\"\n  },\n    tagline:\u00a0\"You Know, for Search\"\n  }\n\n\n\n\nSi la r\u00e9ponse ressemble \u00e0 la sortie ci dessus alors le serveur r\u00e9pond correctement.\nSi les requ\u00eates simples ES peuvent \u00eatre effectu\u00e9es en get via curl ou via un navigateur nous utiliserons l\u2019extension \u2018\nSense\n\u2019 de Chrome pour les requ\u00eates avanc\u00e9es.\n\n\nClusters, nodes, shards et indices\n\n\nL\u2019\u00e9cosyst\u00e8me ES foisonne de termes tr\u00e8s sp\u00e9cifiques, sans entrer dans les d\u00e9tails nous listerons les principaux avant de pr\u00e9senter le fonctionnement global d\u2019ES.\n\n\n\n\n\n\nNode\n\u00a0: Un node est un instance Elasticsearch. Le plus simple et de le visualiser comme un serveur d\u00e9di\u00e9.\n\n\n\n\n\n\nCluster\n\u00a0: Un cluster est un ensemble de nodes. Cela permet de scaler horizontalement ES qui est par nature une application d\u2019architecture distribu\u00e9e. Un node peut \u00eatre \u2018master\u2019 ou \u2018worker\u2019 Le master s\u2019occupe du CRUD d\u2019index (index au sens \u2018base de donn\u00e9es\u2019 ES) ainsi que de la gestion d\u2019ajout retrait de node au sein du cluster. Il est important de noter qu\u2019une fois un cluster en place, l\u2019attribution master / worker se fait de fa\u00e7on automatique. En d\u2019autres termes si le node master tombe, le syst\u00e8me attribuera automatiquement ce r\u00f4le \u00e0 un autre node. Le node master permet aussi d\u2019effectuer des recherches ES sur les documents index\u00e9s. Une application ES peut donc n\u2019avoir qu\u2019un seul node.\n\n\n\n\n\n\nShard\n\u00a0: Un shard est une simple instance de Luc\u00e8ne au sein d\u2019un node. On parle aussi de \u2018worker de bas niveau\u2019. Il n\u2019y a pas grand-chose \u00e0 retenir de ces \u00e9l\u00e9ments dans un premier temps si ce n\u2019est qu\u2019un shard peut \u00eatre de type primaire (\nprimary\n) ou r\u00e9plica (\nreplica\n).  c\u2019est dans un shard primaire que sont stock\u00e9s les documents index\u00e9s,  un shard r\u00e9plica n\u2019est qu\u2019une copie en lecture seule d\u2019un shard primaire pour assurer la p\u00e9rennit\u00e9 des donn\u00e9es lors du crash d\u2019un node.\nPar d\u00e9faut ES cr\u00e9\u00e9 5 shards par node. Lors de la cr\u00e9ation d\u2019un index on peut modifier ce chiffre.\n\n\n\n\n\n\nIndex\n (\nplur\n. indices)\u00a0: L\u2019index (au niveau d\u2019un instance ES) est l\u2019\u00e9quivalent d\u2019une base de donn\u00e9es dans le mod\u00e8le relationnel. Des documents de diff\u00e9rents types (articles, commentaires, utilisateurs) peuvent tout \u00e0 fait \u00eatre index\u00e9s dans un m\u00eame index.\n\n\n\n\n\n\nPour consulter l\u2019\u00e9tat d\u2019un cluster ils suffit de s\u2019y connecter via \nhttp://localhost:9200/_plugin/head/\n. (Plugin ajout\u00e9 \u00e0 l\u2019image ES).\n\n\n\n\n\n\nCluster\n\u00a0: lea-pulse-dev\n\n\nIndices\n\u00a0: 1 seul index ici, lea-pulse-front-01-06-16\n\n\nNodes\n\u00a0: lea-pulse-node-01 (\nmaster\n) lea-pulse-node-02 (\nworker\n)\n\n\nShards\n\u00a0: 3 shards primaires (encadr\u00e9s en vert gras) et 3 shards de type r\u00e9plica.\n\n\nAutres infos, l\u2019index p\u00e8se 10,8M et 1 000 documents sont index\u00e9s.\n\n\n\n\nIndexation et mapping\n\n\nIl est important de ne pas confondre l\u2019indexation Elasticsearch (\u00e9quivalent  \u00e0 une base de donn\u00e9es) avec l\u2019indexation de documents et de champs.\n\n\nIndexation ES\n\n\nUn index est pr\u00e9-configur\u00e9 dans bo_api_l5/config/elasticsearch.php.\nOn indique entre autre le nom, le nombre de shards primaires et le nombre de shards r\u00e9plicas. Inutile d\u2019assigner des r\u00e9plicas dans le cas d\u2019un cluster \u00e0 un seul node, ces derniers ne pourront pas \u00eatre assign\u00e9s. Note importante\u00a0: 1 r\u00e9plica ne signifie pas un shard de type r\u00e9plica mais 1 x le nombre de shards primaires. C\u2019est \u00e0 dire que si on indique 3 shards primaires et 2 replicas, le syst\u00e8me tentera d\u2019affecter 6 shards de type r\u00e9plica. Il faudra donc au moins 3 nodes pour tout assigner.\n\n\nIndexation Des documents\n\n\nPour l\u2019indexation des documents, il existe deux m\u00e9thodes. L\u2019indexation \u2018\nFast & Furious\n\u2019 et l\u2019indexation \u2018\nD\u00e9licate\n\u2019 (ce nommage n\u2019implique que l\u2019auteur de cette documentation).\nDans le premier cas, on envoie simplement une repr\u00e9sentation json d\u2019un objet que l\u2019on souhaite indexer et ES s\u2019occupe de tout.\nExemple (inspir\u00e9 de la doc officielle)\n\n\n  PUT /lea-pulse-front-01-06-16/employee/1\n  {\n      \"first_name\" : \"John\",\n      \"last_name\" :  \"Smith\",\n      \"age\" :        25,\n      \"about\" :      \"I love to go rock climbing\",\n      \"interests\": [ \"sports\", \"music\" ]\n  }\n\n\n\n\n\n\nlea-pulse-front-01-06-16\n: Nom de l\u2019index sur lequel on souhaite envoyer le document.\n\n\nEmployee\n: type de document.\n\n\n1\n: id du document, le plus simple \u00e9tant en r\u00e8gle g\u00e9n\u00e9rale de r\u00e9cup\u00e9rer celui de la base de donn\u00e9es de laquelle est issu le document.\n\n\n\n\nEt baaam le document est index\u00e9\u00a0! Pas besoin de se prendre la t\u00eate sur les champs envoy\u00e9s et leur interpr\u00e9tation lors du stockage ou lors de la recherche. On se moque du Mapping, ES le fait pour nous.\n\n\nLe probl\u00e8me est \u00e9videment que pour une utilisation fine et optimale de ES, cette m\u00e9thode ne suffit pas. Prenons un exemple\u00a0: Un article A qui traite de la crise financi\u00e8re en Europe se verra associer \u00e0 une rubrique \u2018Crise financi\u00e8re\u2019. Si un internaute cherche \u2018crise\u2019 ou \u2018finance\u2019, alors on s\u2019attend \u00e0 ce que toute association avec \u2018Crise financi\u00e8re\u2019 pond\u00e8re le score de pertinence vers le haut. Cela ne peut se faire que si le champ est index\u00e9 comme \u00e9tant du texte (analys\u00e9, pars\u00e9, tokeniz\u00e9 selon les sp\u00e9cificit\u00e9s propres \u00e0 la langue de l\u2019utilisateur qui effectue la recherche). Le mapping automatique s\u00e9lectionnera sans doute un tel comportement. En revanche, si dans un formulaire un minimum dynamique, l\u2019utilisateur ne choisit que les articles de type en lien avec \u2018Crise financi\u00e8re\u2019 alors pour dispenser \u00e0 la vol\u00e9e le nombre d\u2019articles concern\u00e9s, (la ou en sql on imagine where rubrique = \u2018Crise financiere\u2019) l\u2019indexation full-text n\u2019est absolument pas adapt\u00e9e. Il faut dans ce cas un mapping particulier qui permet d\u2019indexer un champ de 2 fa\u00e7ons diff\u00e9rentes, une pour la recherche texte, l\u2019autre pour la recherche filtr\u00e9e par des crit\u00e8res pr\u00e9cis.\nPlus d\u2019infos sur le mapping \u00e0 cette adresse\u00a0: \nhttps://www.elastic.co/guide/en/elasticsearch/guide/current/mapping-intro.html\n\n\nConnexion Laravel 5 / Elasticsearch\n\n\n\n\n\n\nClient Elasticsearch PHP\n:\nLa connexion se fait par la librairie client PHP officielle de ES.\n\n\n\n\n\n\nProvider\n:\nLe provider d\u00e9velopp\u00e9 pour le bo_appi \napp/Providers/ElasticsearchServiceProvider.php\n se charge de l\u2019instanciation du client en utilisant les param\u00e8tres de configuration. Ce provider permet aussi de b\u00e9n\u00e9ficier de l\u2019injection de d\u00e9pendance afin de simplifier son utilisation dans les controlers et repo de l\u2019application Laravel.\n\n\n\n\n\n\nController\n:\nToutes les interactions avec ES doivent passer par le controller \napp/ApiPulse/Controllers/ESController.php\n.\n\n\n\n\n\n\nRepository\n:\nLes requ\u00eates et traitements avanc\u00e9s ES sont effectu\u00e9s dans le repo \napp/ApiPulse/Repositories/ElasticsearchRepository.php\n.\n\n\n\n\n\n\nService\n:\nInterface entre le client officiel et l\u2019app Laravel.\n\n\n\n\n\n\nConsole\n:\nLes scripts de console sont situ\u00e9s dans \napp/Console/Commands\n.\nListe des scripts\u00a0\nesearch\n:\n\n\n\n\nesearch:*create-index\n: Cr\u00e9ation du ou des index d\u00e9crits dans \nconfig/elasticsearch.php*\n\n\nesearch:*delete-index\n: Suppression d'un index (\nconfig/elasticsearch.php*)\n\n\nesearch:*populate\n*: Indexation d'\u00e9l\u00e9ments (en cours de dev)\n\n\nesearch:*update-index\n: Mise \u00e0 jour d'un index (\nconfig/elasticsearch.php*)\n\n\n\n\n\n\n\n\nSandbox sur Laravel 5\n\n\nAfin de faciliter les d\u00e9veloppements et les tests de requ\u00eates d\u00e9clench\u00e9es par les formulaires de recherche, une interface sur l\u2019appli Laravel 5 est accessible.\n\n\n\n\nCe formulaire reprend peu ou prou celui de front Angular 2. Les donn\u00e9es transmises en POST utilisent le m\u00eame endpoint.\n\n\n\n\n\n\n1\n: score de pertinence ES.\nLe rendu est modifiable dans \nressources/elastic/search.blade.php\n.\n\n\n\n\nCommunication Laravel 5 / Elasticsearch\n\n\nToutes les communications avec ES se font en REST. Le CRUD sur les indices ES (config index + mapping), le CRUD sur les documents ES au sein d\u2019un index et les recherches de document \u2018\nYou Know, for Search\n\u2019 comme ils disent.\n\n\nCe qu\u2019il faut donc retenir c\u2019est qu\u2019une fois un cluster et ses nodes en place, tout est enti\u00e8rement g\u00e9rable et param\u00e9trable via L5 gr\u00e2ce \u00e0 la lib client PHP.\n\n\nRequetes DSL (Domain Specific Language)\n:\nIl s\u2019agit simplement d\u2019un syst\u00e8me de requ\u00eate envoy\u00e9es en JSON. Nous n\u2019entrerons pas ici dans le d\u00e9tail des requ\u00eates, la doc officielle le fera bien mieux. Nous retiendrons simplement que nous devrons mettre en place l\u2019\u00e9quivalent de la requ\u00eate JSON attendue sous forme d\u2019un tableau php index\u00e9. Voici la structure de base que nous utilisons.\n\n\n  $params = [\n          #Index Sur lequel porte la requ\u00eate.\n          'index' => env('ELASTICSEARCH_INDEX', 'lea-pulse-front-01-06-16'),\n          #Type de 'collection'.\n          'type'  => 'element',\n          #Structure de base pour une requ\u00eate avanc\u00e9e.\n          'body'  => [\n              #offset\n               'from' => $from,\n             #nombre d\u2019\u00e9l\u00e9ments max \u00e0 retourner.\n               'size' => $size,\n               #Requ\u00eate principale.\n             'query' => [\n                'bool' => [\n                     #matchings de crit\u00e8res qui doivent \u00eatre pris en compte pour qu\u2019un ou plusieurs r\u00e9sultat remontent.\n                   'must'   => [],\n                      #matchings de crit\u00e8res facultatifs qui augmenterons le score de pertinence.\n                    'should' => [],\n                      #Crit\u00e8res discriminants\n                    'must_not' => [],\n                      #Crit\u00e8res de filtres n\u2019impactant pas le score. Exemple\u00a0: \u2018publi\u00e9\u2019.\n                    'filter' => []\n                  ]\n            ],\n            #Le filtrage avec date est le cas le plus utilis\u00e9 on l'initialise donc ici.\n            'sort'  => [\n              ['date_modification' => ['order' => 'desc']],\n              ['_score'            => ['order' => 'desc']]\n            ],\n          ]\n        ];\n\n\n\n\nExemple concret\n: Une fois (sortie JSON du client PHP).\nOn recherche ici tous les \u00e9l\u00e9ments (articles) comportant \u2018hollande\u2019 dans le titre ou le texte (must) voir si possible (should) dans les topics et dont l\u2019\u00e9tat est publi\u00e9 (99). On limite la recherche aux 10 \u00e9l\u00e9ments les + pertinents.\n\n\n\"query\": {\n  \"bool\": {\n    \"must\": [\n              {\n      \"multi_match\": {\n        \"query\": \"hollande\",\n        \"fields\": [\"titre\", \"texte\"]\n      }\n    }],\n          \"should\": [{\n        \"match\": {\n        \"topics\": \"hollande\"\n      }\n    }],\n    \"filter\": [{\n              \"term\": {\n                  \"etat\": \"99\"\n              }\n    }]\n  }\n},\n  \"size\": \"10\",\n  \"from\": \"0\"\n}\n\n\n\n\nR\u00e9ponse\n (1 seule occurence pour la doc):\n\n\n{\n   \"took\": 18,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 3,\n      \"successful\": 3,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 71,\n      \"max_score\": 0.5805197,\n      \"hits\": [\n         {\n            \"_index\": \"lea-pulse-front-01-06-16\",\n            \"_type\": \"element\",\n            \"_id\": \"2005235\",\n            \"_score\": 0.5805197,\n            \"_source\": {\n               \"id_article\": 2005235,\n               \"id_element\": 2005236,\n               \"titre\": \"Le pr\u00e9sident fran\u00e7ais Fran\u00e7ois Hollande en visite d'Etat en Egypte\",\n               \"chapeau\": \"\",\n               \"texte\": \"Le pr\u00e9sident fran\u00e7ais Fran\u00e7ois Hollande est arriv\u00e9 dimanche au Caire pour r\u00e9affirmer son soutien \u00e0 son homologue Abdel Fattah al-Sissi qui dirige l'Egypte d'une main de fer, une visite centr\u00e9e sur la s\u00e9curit\u00e9 au Moyen-Orient mais avec un important volet commercial.M. Hollande a atterri au Caire en milieu d'apr\u00e8s-midi en provenance du Liban, premi\u00e8re \u00e9tape d'une tourn\u00e9e au Moyen-Orient devant aussi le conduire en Jordanie apr\u00e8s deux jours d'une visite d'Etat en Egypte, a constat\u00e9 une journaliste de l'AFP \u00e0 l'a\u00e9roport. Il a \u00e9t\u00e9 accueilli par M. Sissi qui l'a embrass\u00e9 \u00e0 la descente d'avion.Les deux hommes doivent s'entretenir notamment de la question isra\u00e9lo-palestinienne, de la guerre en Syrie, de la tension en Libye et de la lutte contre l'organisation jihadiste Etat islamique (EI), selon la pr\u00e9sidence fran\u00e7aise.M. Hollande est accompagn\u00e9 d'une trentaine de chefs de grands groupes fran\u00e7ais mais aussi de petites et moyennes entreprises (PME), qui doivent prendre part \u00e0 un \\\"forum d'affaires\\\" franco-\u00e9gyptien et assister \u00e0 la signature de divers \\\"accord sectoriels\\\", notamment dans les domaines des transports urbains, de l'\u00e9nergie renouvelable et de la formation professionnelle, selon la pr\u00e9sidence fran\u00e7aise.  La question des droits de l'Homme devrait \u00e9galement affleurer durant cette visite. La France a tr\u00e8s t\u00f4t manifest\u00e9 son soutien et conclu d'importants contrats d'armement apr\u00e8s la destitution en 2013 par M. Sissi, alors chef de l'arm\u00e9e, du pr\u00e9sident islamiste \u00e9lu Mohamed Morsi. Le pouvoir r\u00e9prime depuis tr\u00e8s violemment toute forme d'opposition. Avant le voyage, la F\u00e9d\u00e9ration internationale des Droits de l'Homme (FIDH), Amnesty international et Human Rights Watch (HRW) notamment ont d\u00e9nonc\u00e9 le \\\"silence assourdissant\\\" de la France sur la \\\"gravit\u00e9 de la r\u00e9pression contre la soci\u00e9t\u00e9 civile, au prix d'une augmentation vertigineuse de la pratique de la torture, des incarc\u00e9rations abusives, des disparitions forc\u00e9es et des violences (...) sans pr\u00e9c\u00e9dent dans l'histoire r\u00e9cente de l'Egypte\\\". L\u2019entourage de M. Hollande a assur\u00e9 que le pr\u00e9sident entendait sur ces sujets porter des \\\"messages\\\" de fa\u00e7on \\\"discr\u00e8te et efficace\\\" au Caire.Source : AFP\",\n               \"etat\": 99,\n               \"date_creation\": 1460904629,\n               \"date_modification\": 1460906069,\n               \"topics\": [\n                  \"ACTU FRANCE-MONDE\"\n               ],\n               \"utilisateur_creation\": 8,\n               \"source\": \"flux externes\",\n               \"payant\": false,\n               \"utilisateur_assign\": null,\n               \"versions\": [],\n               \"image\": \"5713ad62a43f5e3625dc11b7\"\n            }\n         }\n       }\n     }\n\n\n\n\nMetadata\n\n\nRepr\u00e9sentation simplifi\u00e9e du mod\u00e8le de donn\u00e9es du syst\u00e8me de meta\n\n\n\n\nCela reste sch\u00e9matique et ne repr\u00e9sente en rien la base Mongo. Ce qu\u2019il faut retenir ici c\u2019est simplement que la classe Meta et Data ne sont pas li\u00e9es entre elles. En effet \nMeta sert de description\n, c\u2019est dans cette classe qu\u2019on d\u00e9clarera et d\u00e9crira chaque champ suppl\u00e9mentaire. \n1 meta = 1 champ de formulaire\n.\nLa classe data elle g\u00e8re le stockage des donn\u00e9es d\u2019un champ meta pour une entit\u00e9 donn\u00e9e.\n\n\nExemple\n\u00a0: On souhaite rajouter un champ texte \u2018\nNotes de l\u2019auteur\n\u2019 sur les entit\u00e9s de type Element. il faudra donc d\u00e9crire ce champ dans la Meta (titre, type de champ, valeur par d\u00e9faut etc etc.) puis une fois le champ d\u00e9clarer il appara\u00eetra sur les formulaires de saisie d\u2019entit\u00e9s de type Element. D\u00e8s qu\u2019un utilisateur enregistrera des notes sur un article (Element), elles seront stock\u00e9es dans \u2018Data\u2019.\n\n\nD\u00e9claration d'une Meta\n\n\nLes champs de base d\u2019une meta sont les suivants.\n\n\n\n\nName\n\u00a0: nom machine de la meta\n\n\nsubject\n\u00a0: types d\u2019entit\u00e9s auxquelles s\u2019applique la meta.\n\n\nCondition\n\u00a0: (\u00e0 red\u00e9finir / non exploit\u00e9e pour le moment)\n\n\nsettings\n\u00a0: Objet JSON d\u00e9crivant le champ \u00e0 ajouter.\n\n\n\n\nDescription du champ settings\n\n\n\n\nEn place\n\n\nA integrer au niveau du meta-handler NG2 ou du template de rendu associ\u00e9\n\n\nA discuter / \u00e9voluer\n\n\n\n\n\n\n\n\n\n\nCl\u00e9\n\n\nObligatoire\n\n\nDescription\n\n\nValeurs\n\n\n\n\n\n\n\n\n\n\ntype\n\n\noui\n\n\nType d'entr\u00e9e de formulaire\n\n\nText, radios, checkbox, checkboxes, select, textarea\n\n\n\n\n\n\ntitle\n\n\noui\n\n\nTitre du champ\n\n\n\n\n\n\n\n\ndefault_value\n\n\noui\n\n\nValeur par d\u00e9faut\n\n\nChaine de caract\u00e8res ou tableau dans le cas de champs \u00e0 valeurs multiples\n\n\n\n\n\n\nvalue\n\n\nnon\n\n\nValeur fixe non modifiable\n\n\n\n\n\n\n\n\ndescription\n\n\nnon\n\n\nText descriptif pouvant appar\u00e2itre sur le rendu final du formulaire\n\n\n\n\n\n\n\n\nplaceholder\n\n\nnon\n\n\nLe placeholder quoi\u00a0!\n\n\n\n\n\n\n\n\naccess\n\n\nnon\n\n\n-\u00c0 voir si on conserve- par exemple tableau listant les droits d\u2019acc\u00e8sCRUD \u00e0 ce champ par r\u00f4le.\n\n\n\n\n\n\n\n\nrequired\n\n\nnon\n\n\nD\u00e9termine si un champ est obligatoire ou non.\n\n\nbool\u00e9en\n\n\n\n\n\n\noptions\n\n\nnon\n\n\nParam\u00e8trages de sous niveau pour les champs multiples (radios, checkboxes)\n\n\nTableau assoc  \u2193 exemple en dessous \u2193\n\n\n\n\n\n\ndisabled\n\n\nnon\n\n\nPermet de mettre un champ en lecture seule\n\n\nbool\u00e9en\n\n\n\n\n\n\n\n\n{\n    \"value\": \"TW\",\n    \"label\": \"Twitter\"\n},\n{\n    \"value\": \"FB\",\n    \"label\": \"Facebook\"\n},\n{\n    \"value\": \"GO\",\n    \"label\": \"Google +\"\n}\n\n\n\n\nCollecte et acheminement des donn\u00e9es\n\n\nR\u00e9cup\u00e9ration des donn\u00e9es\n\n\n\n\nEnregistrement / Publication",
            "title": "BackOffice Laravel5"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#modules",
            "text": "Pour ajouter des modules \u00e0 votre installation de laravel, ceux-ci devront etre dans app/Modules et seront load\u00e9 en psr4.\nIl faudra simplement faire un composer dump-autoload pour qu'il soit pris en compte.  Vous pouvez inclure aussi des routes, grace au fichier app/Http/modules.routes.php",
            "title": "Modules"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#commands",
            "text": "Imports  Les scripts d'import doivent fonctionner en mode authentifi\u00e9, pour cela il est n\u00e9cessaire de connaitre un user (en g\u00e9n\u00e9ral 'import').  use Illuminate\\Support\\Facades\\Auth;\nuse ApiPulse\\Models\\Lea\\sfGuardUser;\n...\n$user_import = sfGuardUser::where('username','import')->first();\n//on s'authentifie en tant que ce user\nAuth::login($user_import);\n\n//plus tard dans le script on pourra retrouver ce user gr\u00e2ce \u00e0:\n$user = Auth::user();",
            "title": "Commands"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#publication",
            "text": "La publication est bas\u00e9 sur le systeme d'evenement de Laravel et sur les files de Redis.  Principe de base, lors de l'enregistrement d'un article (c'est aussi valable pour les blocs, colonnes etc..):   On mets \u00e0 jours les donn\u00e9es back de l'article (les principales dans mysql, les metas dans mongo)  On insere l'ID de cet article dans une file redis (dans Legacy avec SdvRedisClient et dans L5 avec Predis)  Ceci mets fin \u00e0 la partie synchrone de l'enregistrement  En paral\u00e9lle, un daemon lanc\u00e9 avec \"artisan redis:subscribe  \" va d\u00e9piler cette file  Pour chaque ID r\u00e9cup\u00e9rer, il va cr\u00e9er un evenement d'une classe sp\u00e9cial li\u00e9 \u00e0 cette file  Chacun de ces evenements est li\u00e9 \u00e0 un ou plusieurs listeners, qui vont chacun etre ex\u00e9cut\u00e9  Les listeners d\u00e9finissent quels traitements sont \u00e0 faire pour la publication (ceci permet de pouvoir definir plusieurs r\u00e9action pour une seul evenement)   Evenements  Les \u00e9venements sont d\u00e9finies dans ApiPulse/Events, ou dans des modules Modules/Nom_Module/Events.  Les listeners sont dans ApiPulse/Listeners, ou dans des modules Modules/Nom_Module/Listeners.  Les liaisons entre les 2 sont dans Providers/EventServiceProvider.php ou dans les modules Modules/Nom_Module/Providers/EventServiceProvider.php.",
            "title": "Publication"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#controllers",
            "text": "Config  Le controller config permet de stocker des infos de configuration dans la collection  config  de la base  lea_pulse_back .  Deux fonctions sont d\u00e9finies dans le controller:   get($type)  : permet de r\u00e9cup\u00e9rer le document dont le type correspond  set($type, Request $req)  : permet de cr\u00e9er ou mettre un jour un document correspondant au type donn\u00e9.   Topic  Le controller de Topic permet d'acc\u00e9der aux informations concernant les topics en lecture.  On peut :   acc\u00e9der \u00e0 la liste des topics en entier (avec une mise en cache des donn\u00e9es) via  getTopicList() .  r\u00e9cup\u00e9rer les informations d'un seul topic via  getTopic($id) .  r\u00e9cup\u00e9rer un liste pagin\u00e9e d'articles li\u00e9s au topic demand\u00e9 via  getTopicElements($id, $type = null, $perPage=20)  $id  correcpond \u00e0 l'identifant de la hi\u00e9rarchie,  $type  correcpond \u00e0 la version des articles voulus (en ligne, brouillon, ...),  $perPage  est le nombre d'article qui nous sont retourn\u00e9 par page.    r\u00e9cup\u00e9rer la configuration du topic et les veleurs associ\u00e9es pour le param\u00e9trage de celui-ci via  getMetas($id) .",
            "title": "Controllers"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#services",
            "text": "Cache  Il est possible de mettre en cache certaines donn\u00e9es de la base MySQL dans la base Mongo.\nLe fonctionnement de la fonction  get()  du service de cache est de chercher des donn\u00e9es r\u00e9centes dans la collection de cache, de les mettre \u00e0 jour si la date de dernier update du contenu n'est pas suffisamment r\u00e9cente ou de cr\u00e9er un nouveau document si le cache n'existe pas.  La syntaxe est la suivante:  use ApiPulse\\Services\\cacheService as Cache;\n\nCache::get($id, $max_minute, $request);   $id :  String  - Identifiant du document dans lequel chercher, mettre \u00e0 jour ou cr\u00e9er le cache.  $max_minute :  Int  - Nombre de minutes maximum de derni\u00e8re update du cache avant qu'il ne soit consid\u00e9r\u00e9 comme p\u00e9rim\u00e9 (ce qui entraine une nouvelle requ\u00eate MySQL)  $request :  Request  - Requ\u00eate \u00e0 effectu\u00e9e sur la base MySQL (dans le cas de cr\u00e9ation/mise \u00e0 jour)   Exemple:  Cache::get(\"TopicList\", 5, Topic::select('id_hierarchie', 'titre', 'path', 'uri'));",
            "title": "Services"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#elasticsearch",
            "text": "Installation et Configuration  Docker  L\u2019instance Elasticsearch (\u2018ES\u2019 pour la suite de la documentation) docker est bas\u00e9e sur  l\u2019image officielle 2.3 \nLe docker file est dans  /data/builds/elasticsearch \nLes configs (g\u00e9n\u00e9rale et logs) se situent dans le sous-dossier \u2018conf\u2019.  Une fois le docker-compose lanc\u00e9 le conteneur doit \u00eatre mapp\u00e9 comme suit\u00a0: 0.0.0.0:9200->9200/tcp, 9300/tcp  et doit porter le nom suivant\u00a0:  lea_pulse_elasticsearch  \u00c9tat du serveur ES  Pour v\u00e9rifier que le serveur r\u00e9pond bien, il suffit d\u2019ex\u00e9cuter\u00a0: \u2018 curl localhost:9200 \u2019. Ou simplement d\u2019y acc\u00e9der via votre navigateur pr\u00e9f\u00e9r\u00e9.    {\n    name:\u00a0\"lea-pulse-node-01\",\n    cluster_name:\u00a0\"lea-pulse-dev\",\n    version:\u00a0\n    {\n      number:\u00a0\"2.3.3\",\n      build_hash:\u00a0\"218bdf10790eef486ff2c41a3df5cfa32dadcfde\",\n      build_timestamp:\u00a0\"2016-05-17T15:40:04Z\",\n      build_snapshot:\u00a0false,\n      lucene_version:\u00a0\"5.5.0\"\n  },\n    tagline:\u00a0\"You Know, for Search\"\n  }  Si la r\u00e9ponse ressemble \u00e0 la sortie ci dessus alors le serveur r\u00e9pond correctement.\nSi les requ\u00eates simples ES peuvent \u00eatre effectu\u00e9es en get via curl ou via un navigateur nous utiliserons l\u2019extension \u2018 Sense \u2019 de Chrome pour les requ\u00eates avanc\u00e9es.  Clusters, nodes, shards et indices  L\u2019\u00e9cosyst\u00e8me ES foisonne de termes tr\u00e8s sp\u00e9cifiques, sans entrer dans les d\u00e9tails nous listerons les principaux avant de pr\u00e9senter le fonctionnement global d\u2019ES.    Node \u00a0: Un node est un instance Elasticsearch. Le plus simple et de le visualiser comme un serveur d\u00e9di\u00e9.    Cluster \u00a0: Un cluster est un ensemble de nodes. Cela permet de scaler horizontalement ES qui est par nature une application d\u2019architecture distribu\u00e9e. Un node peut \u00eatre \u2018master\u2019 ou \u2018worker\u2019 Le master s\u2019occupe du CRUD d\u2019index (index au sens \u2018base de donn\u00e9es\u2019 ES) ainsi que de la gestion d\u2019ajout retrait de node au sein du cluster. Il est important de noter qu\u2019une fois un cluster en place, l\u2019attribution master / worker se fait de fa\u00e7on automatique. En d\u2019autres termes si le node master tombe, le syst\u00e8me attribuera automatiquement ce r\u00f4le \u00e0 un autre node. Le node master permet aussi d\u2019effectuer des recherches ES sur les documents index\u00e9s. Une application ES peut donc n\u2019avoir qu\u2019un seul node.    Shard \u00a0: Un shard est une simple instance de Luc\u00e8ne au sein d\u2019un node. On parle aussi de \u2018worker de bas niveau\u2019. Il n\u2019y a pas grand-chose \u00e0 retenir de ces \u00e9l\u00e9ments dans un premier temps si ce n\u2019est qu\u2019un shard peut \u00eatre de type primaire ( primary ) ou r\u00e9plica ( replica ).  c\u2019est dans un shard primaire que sont stock\u00e9s les documents index\u00e9s,  un shard r\u00e9plica n\u2019est qu\u2019une copie en lecture seule d\u2019un shard primaire pour assurer la p\u00e9rennit\u00e9 des donn\u00e9es lors du crash d\u2019un node.\nPar d\u00e9faut ES cr\u00e9\u00e9 5 shards par node. Lors de la cr\u00e9ation d\u2019un index on peut modifier ce chiffre.    Index  ( plur . indices)\u00a0: L\u2019index (au niveau d\u2019un instance ES) est l\u2019\u00e9quivalent d\u2019une base de donn\u00e9es dans le mod\u00e8le relationnel. Des documents de diff\u00e9rents types (articles, commentaires, utilisateurs) peuvent tout \u00e0 fait \u00eatre index\u00e9s dans un m\u00eame index.    Pour consulter l\u2019\u00e9tat d\u2019un cluster ils suffit de s\u2019y connecter via  http://localhost:9200/_plugin/head/ . (Plugin ajout\u00e9 \u00e0 l\u2019image ES).    Cluster \u00a0: lea-pulse-dev  Indices \u00a0: 1 seul index ici, lea-pulse-front-01-06-16  Nodes \u00a0: lea-pulse-node-01 ( master ) lea-pulse-node-02 ( worker )  Shards \u00a0: 3 shards primaires (encadr\u00e9s en vert gras) et 3 shards de type r\u00e9plica.  Autres infos, l\u2019index p\u00e8se 10,8M et 1 000 documents sont index\u00e9s.   Indexation et mapping  Il est important de ne pas confondre l\u2019indexation Elasticsearch (\u00e9quivalent  \u00e0 une base de donn\u00e9es) avec l\u2019indexation de documents et de champs.  Indexation ES  Un index est pr\u00e9-configur\u00e9 dans bo_api_l5/config/elasticsearch.php.\nOn indique entre autre le nom, le nombre de shards primaires et le nombre de shards r\u00e9plicas. Inutile d\u2019assigner des r\u00e9plicas dans le cas d\u2019un cluster \u00e0 un seul node, ces derniers ne pourront pas \u00eatre assign\u00e9s. Note importante\u00a0: 1 r\u00e9plica ne signifie pas un shard de type r\u00e9plica mais 1 x le nombre de shards primaires. C\u2019est \u00e0 dire que si on indique 3 shards primaires et 2 replicas, le syst\u00e8me tentera d\u2019affecter 6 shards de type r\u00e9plica. Il faudra donc au moins 3 nodes pour tout assigner.  Indexation Des documents  Pour l\u2019indexation des documents, il existe deux m\u00e9thodes. L\u2019indexation \u2018 Fast & Furious \u2019 et l\u2019indexation \u2018 D\u00e9licate \u2019 (ce nommage n\u2019implique que l\u2019auteur de cette documentation).\nDans le premier cas, on envoie simplement une repr\u00e9sentation json d\u2019un objet que l\u2019on souhaite indexer et ES s\u2019occupe de tout.\nExemple (inspir\u00e9 de la doc officielle)    PUT /lea-pulse-front-01-06-16/employee/1\n  {\n      \"first_name\" : \"John\",\n      \"last_name\" :  \"Smith\",\n      \"age\" :        25,\n      \"about\" :      \"I love to go rock climbing\",\n      \"interests\": [ \"sports\", \"music\" ]\n  }   lea-pulse-front-01-06-16 : Nom de l\u2019index sur lequel on souhaite envoyer le document.  Employee : type de document.  1 : id du document, le plus simple \u00e9tant en r\u00e8gle g\u00e9n\u00e9rale de r\u00e9cup\u00e9rer celui de la base de donn\u00e9es de laquelle est issu le document.   Et baaam le document est index\u00e9\u00a0! Pas besoin de se prendre la t\u00eate sur les champs envoy\u00e9s et leur interpr\u00e9tation lors du stockage ou lors de la recherche. On se moque du Mapping, ES le fait pour nous.  Le probl\u00e8me est \u00e9videment que pour une utilisation fine et optimale de ES, cette m\u00e9thode ne suffit pas. Prenons un exemple\u00a0: Un article A qui traite de la crise financi\u00e8re en Europe se verra associer \u00e0 une rubrique \u2018Crise financi\u00e8re\u2019. Si un internaute cherche \u2018crise\u2019 ou \u2018finance\u2019, alors on s\u2019attend \u00e0 ce que toute association avec \u2018Crise financi\u00e8re\u2019 pond\u00e8re le score de pertinence vers le haut. Cela ne peut se faire que si le champ est index\u00e9 comme \u00e9tant du texte (analys\u00e9, pars\u00e9, tokeniz\u00e9 selon les sp\u00e9cificit\u00e9s propres \u00e0 la langue de l\u2019utilisateur qui effectue la recherche). Le mapping automatique s\u00e9lectionnera sans doute un tel comportement. En revanche, si dans un formulaire un minimum dynamique, l\u2019utilisateur ne choisit que les articles de type en lien avec \u2018Crise financi\u00e8re\u2019 alors pour dispenser \u00e0 la vol\u00e9e le nombre d\u2019articles concern\u00e9s, (la ou en sql on imagine where rubrique = \u2018Crise financiere\u2019) l\u2019indexation full-text n\u2019est absolument pas adapt\u00e9e. Il faut dans ce cas un mapping particulier qui permet d\u2019indexer un champ de 2 fa\u00e7ons diff\u00e9rentes, une pour la recherche texte, l\u2019autre pour la recherche filtr\u00e9e par des crit\u00e8res pr\u00e9cis.\nPlus d\u2019infos sur le mapping \u00e0 cette adresse\u00a0:  https://www.elastic.co/guide/en/elasticsearch/guide/current/mapping-intro.html  Connexion Laravel 5 / Elasticsearch    Client Elasticsearch PHP :\nLa connexion se fait par la librairie client PHP officielle de ES.    Provider :\nLe provider d\u00e9velopp\u00e9 pour le bo_appi  app/Providers/ElasticsearchServiceProvider.php  se charge de l\u2019instanciation du client en utilisant les param\u00e8tres de configuration. Ce provider permet aussi de b\u00e9n\u00e9ficier de l\u2019injection de d\u00e9pendance afin de simplifier son utilisation dans les controlers et repo de l\u2019application Laravel.    Controller :\nToutes les interactions avec ES doivent passer par le controller  app/ApiPulse/Controllers/ESController.php .    Repository :\nLes requ\u00eates et traitements avanc\u00e9s ES sont effectu\u00e9s dans le repo  app/ApiPulse/Repositories/ElasticsearchRepository.php .    Service :\nInterface entre le client officiel et l\u2019app Laravel.    Console :\nLes scripts de console sont situ\u00e9s dans  app/Console/Commands .\nListe des scripts\u00a0 esearch :   esearch:*create-index : Cr\u00e9ation du ou des index d\u00e9crits dans  config/elasticsearch.php*  esearch:*delete-index : Suppression d'un index ( config/elasticsearch.php*)  esearch:*populate *: Indexation d'\u00e9l\u00e9ments (en cours de dev)  esearch:*update-index : Mise \u00e0 jour d'un index ( config/elasticsearch.php*)     Sandbox sur Laravel 5  Afin de faciliter les d\u00e9veloppements et les tests de requ\u00eates d\u00e9clench\u00e9es par les formulaires de recherche, une interface sur l\u2019appli Laravel 5 est accessible.   Ce formulaire reprend peu ou prou celui de front Angular 2. Les donn\u00e9es transmises en POST utilisent le m\u00eame endpoint.    1 : score de pertinence ES.\nLe rendu est modifiable dans  ressources/elastic/search.blade.php .   Communication Laravel 5 / Elasticsearch  Toutes les communications avec ES se font en REST. Le CRUD sur les indices ES (config index + mapping), le CRUD sur les documents ES au sein d\u2019un index et les recherches de document \u2018 You Know, for Search \u2019 comme ils disent.  Ce qu\u2019il faut donc retenir c\u2019est qu\u2019une fois un cluster et ses nodes en place, tout est enti\u00e8rement g\u00e9rable et param\u00e9trable via L5 gr\u00e2ce \u00e0 la lib client PHP.  Requetes DSL (Domain Specific Language) :\nIl s\u2019agit simplement d\u2019un syst\u00e8me de requ\u00eate envoy\u00e9es en JSON. Nous n\u2019entrerons pas ici dans le d\u00e9tail des requ\u00eates, la doc officielle le fera bien mieux. Nous retiendrons simplement que nous devrons mettre en place l\u2019\u00e9quivalent de la requ\u00eate JSON attendue sous forme d\u2019un tableau php index\u00e9. Voici la structure de base que nous utilisons.    $params = [\n          #Index Sur lequel porte la requ\u00eate.\n          'index' => env('ELASTICSEARCH_INDEX', 'lea-pulse-front-01-06-16'),\n          #Type de 'collection'.\n          'type'  => 'element',\n          #Structure de base pour une requ\u00eate avanc\u00e9e.\n          'body'  => [\n              #offset\n               'from' => $from,\n             #nombre d\u2019\u00e9l\u00e9ments max \u00e0 retourner.\n               'size' => $size,\n               #Requ\u00eate principale.\n             'query' => [\n                'bool' => [\n                     #matchings de crit\u00e8res qui doivent \u00eatre pris en compte pour qu\u2019un ou plusieurs r\u00e9sultat remontent.\n                   'must'   => [],\n                      #matchings de crit\u00e8res facultatifs qui augmenterons le score de pertinence.\n                    'should' => [],\n                      #Crit\u00e8res discriminants\n                    'must_not' => [],\n                      #Crit\u00e8res de filtres n\u2019impactant pas le score. Exemple\u00a0: \u2018publi\u00e9\u2019.\n                    'filter' => []\n                  ]\n            ],\n            #Le filtrage avec date est le cas le plus utilis\u00e9 on l'initialise donc ici.\n            'sort'  => [\n              ['date_modification' => ['order' => 'desc']],\n              ['_score'            => ['order' => 'desc']]\n            ],\n          ]\n        ];  Exemple concret : Une fois (sortie JSON du client PHP).\nOn recherche ici tous les \u00e9l\u00e9ments (articles) comportant \u2018hollande\u2019 dans le titre ou le texte (must) voir si possible (should) dans les topics et dont l\u2019\u00e9tat est publi\u00e9 (99). On limite la recherche aux 10 \u00e9l\u00e9ments les + pertinents.  \"query\": {\n  \"bool\": {\n    \"must\": [\n              {\n      \"multi_match\": {\n        \"query\": \"hollande\",\n        \"fields\": [\"titre\", \"texte\"]\n      }\n    }],\n          \"should\": [{\n        \"match\": {\n        \"topics\": \"hollande\"\n      }\n    }],\n    \"filter\": [{\n              \"term\": {\n                  \"etat\": \"99\"\n              }\n    }]\n  }\n},\n  \"size\": \"10\",\n  \"from\": \"0\"\n}  R\u00e9ponse  (1 seule occurence pour la doc):  {\n   \"took\": 18,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 3,\n      \"successful\": 3,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 71,\n      \"max_score\": 0.5805197,\n      \"hits\": [\n         {\n            \"_index\": \"lea-pulse-front-01-06-16\",\n            \"_type\": \"element\",\n            \"_id\": \"2005235\",\n            \"_score\": 0.5805197,\n            \"_source\": {\n               \"id_article\": 2005235,\n               \"id_element\": 2005236,\n               \"titre\": \"Le pr\u00e9sident fran\u00e7ais Fran\u00e7ois Hollande en visite d'Etat en Egypte\",\n               \"chapeau\": \"\",\n               \"texte\": \"Le pr\u00e9sident fran\u00e7ais Fran\u00e7ois Hollande est arriv\u00e9 dimanche au Caire pour r\u00e9affirmer son soutien \u00e0 son homologue Abdel Fattah al-Sissi qui dirige l'Egypte d'une main de fer, une visite centr\u00e9e sur la s\u00e9curit\u00e9 au Moyen-Orient mais avec un important volet commercial.M. Hollande a atterri au Caire en milieu d'apr\u00e8s-midi en provenance du Liban, premi\u00e8re \u00e9tape d'une tourn\u00e9e au Moyen-Orient devant aussi le conduire en Jordanie apr\u00e8s deux jours d'une visite d'Etat en Egypte, a constat\u00e9 une journaliste de l'AFP \u00e0 l'a\u00e9roport. Il a \u00e9t\u00e9 accueilli par M. Sissi qui l'a embrass\u00e9 \u00e0 la descente d'avion.Les deux hommes doivent s'entretenir notamment de la question isra\u00e9lo-palestinienne, de la guerre en Syrie, de la tension en Libye et de la lutte contre l'organisation jihadiste Etat islamique (EI), selon la pr\u00e9sidence fran\u00e7aise.M. Hollande est accompagn\u00e9 d'une trentaine de chefs de grands groupes fran\u00e7ais mais aussi de petites et moyennes entreprises (PME), qui doivent prendre part \u00e0 un \\\"forum d'affaires\\\" franco-\u00e9gyptien et assister \u00e0 la signature de divers \\\"accord sectoriels\\\", notamment dans les domaines des transports urbains, de l'\u00e9nergie renouvelable et de la formation professionnelle, selon la pr\u00e9sidence fran\u00e7aise.  La question des droits de l'Homme devrait \u00e9galement affleurer durant cette visite. La France a tr\u00e8s t\u00f4t manifest\u00e9 son soutien et conclu d'importants contrats d'armement apr\u00e8s la destitution en 2013 par M. Sissi, alors chef de l'arm\u00e9e, du pr\u00e9sident islamiste \u00e9lu Mohamed Morsi. Le pouvoir r\u00e9prime depuis tr\u00e8s violemment toute forme d'opposition. Avant le voyage, la F\u00e9d\u00e9ration internationale des Droits de l'Homme (FIDH), Amnesty international et Human Rights Watch (HRW) notamment ont d\u00e9nonc\u00e9 le \\\"silence assourdissant\\\" de la France sur la \\\"gravit\u00e9 de la r\u00e9pression contre la soci\u00e9t\u00e9 civile, au prix d'une augmentation vertigineuse de la pratique de la torture, des incarc\u00e9rations abusives, des disparitions forc\u00e9es et des violences (...) sans pr\u00e9c\u00e9dent dans l'histoire r\u00e9cente de l'Egypte\\\". L\u2019entourage de M. Hollande a assur\u00e9 que le pr\u00e9sident entendait sur ces sujets porter des \\\"messages\\\" de fa\u00e7on \\\"discr\u00e8te et efficace\\\" au Caire.Source : AFP\",\n               \"etat\": 99,\n               \"date_creation\": 1460904629,\n               \"date_modification\": 1460906069,\n               \"topics\": [\n                  \"ACTU FRANCE-MONDE\"\n               ],\n               \"utilisateur_creation\": 8,\n               \"source\": \"flux externes\",\n               \"payant\": false,\n               \"utilisateur_assign\": null,\n               \"versions\": [],\n               \"image\": \"5713ad62a43f5e3625dc11b7\"\n            }\n         }\n       }\n     }",
            "title": "Elasticsearch"
        },
        {
            "location": "/01_Developpeur/03_BackOffice_Laravel5/index.html#metadata",
            "text": "Repr\u00e9sentation simplifi\u00e9e du mod\u00e8le de donn\u00e9es du syst\u00e8me de meta   Cela reste sch\u00e9matique et ne repr\u00e9sente en rien la base Mongo. Ce qu\u2019il faut retenir ici c\u2019est simplement que la classe Meta et Data ne sont pas li\u00e9es entre elles. En effet  Meta sert de description , c\u2019est dans cette classe qu\u2019on d\u00e9clarera et d\u00e9crira chaque champ suppl\u00e9mentaire.  1 meta = 1 champ de formulaire .\nLa classe data elle g\u00e8re le stockage des donn\u00e9es d\u2019un champ meta pour une entit\u00e9 donn\u00e9e.  Exemple \u00a0: On souhaite rajouter un champ texte \u2018 Notes de l\u2019auteur \u2019 sur les entit\u00e9s de type Element. il faudra donc d\u00e9crire ce champ dans la Meta (titre, type de champ, valeur par d\u00e9faut etc etc.) puis une fois le champ d\u00e9clarer il appara\u00eetra sur les formulaires de saisie d\u2019entit\u00e9s de type Element. D\u00e8s qu\u2019un utilisateur enregistrera des notes sur un article (Element), elles seront stock\u00e9es dans \u2018Data\u2019.  D\u00e9claration d'une Meta  Les champs de base d\u2019une meta sont les suivants.   Name \u00a0: nom machine de la meta  subject \u00a0: types d\u2019entit\u00e9s auxquelles s\u2019applique la meta.  Condition \u00a0: (\u00e0 red\u00e9finir / non exploit\u00e9e pour le moment)  settings \u00a0: Objet JSON d\u00e9crivant le champ \u00e0 ajouter.   Description du champ settings   En place  A integrer au niveau du meta-handler NG2 ou du template de rendu associ\u00e9  A discuter / \u00e9voluer      Cl\u00e9  Obligatoire  Description  Valeurs      type  oui  Type d'entr\u00e9e de formulaire  Text, radios, checkbox, checkboxes, select, textarea    title  oui  Titre du champ     default_value  oui  Valeur par d\u00e9faut  Chaine de caract\u00e8res ou tableau dans le cas de champs \u00e0 valeurs multiples    value  non  Valeur fixe non modifiable     description  non  Text descriptif pouvant appar\u00e2itre sur le rendu final du formulaire     placeholder  non  Le placeholder quoi\u00a0!     access  non  -\u00c0 voir si on conserve- par exemple tableau listant les droits d\u2019acc\u00e8sCRUD \u00e0 ce champ par r\u00f4le.     required  non  D\u00e9termine si un champ est obligatoire ou non.  bool\u00e9en    options  non  Param\u00e8trages de sous niveau pour les champs multiples (radios, checkboxes)  Tableau assoc  \u2193 exemple en dessous \u2193    disabled  non  Permet de mettre un champ en lecture seule  bool\u00e9en     {\n    \"value\": \"TW\",\n    \"label\": \"Twitter\"\n},\n{\n    \"value\": \"FB\",\n    \"label\": \"Facebook\"\n},\n{\n    \"value\": \"GO\",\n    \"label\": \"Google +\"\n}  Collecte et acheminement des donn\u00e9es  R\u00e9cup\u00e9ration des donn\u00e9es   Enregistrement / Publication",
            "title": "Metadata"
        },
        {
            "location": "/01_Developpeur/04_FrontOffice_Engine/index.html",
            "text": "",
            "title": "FrontOffice Engine"
        },
        {
            "location": "/01_Developpeur/05_FrontOffice_Templating/index.html",
            "text": "",
            "title": "FrontOffice Templating"
        },
        {
            "location": "/02_Utilisateur/00_Introduction/index.html",
            "text": "Lea\nPulse  est un BackOffice de gestion de contenu editorial\n\n\n\n\nPlateforme collaborative de gestion de contenu editorial\n\n\nStatistique de cr\u00e9ation de contenu\n\n\nSuivis des consultations et partages des articles\n\n\n\n\nD\u00e9mo de Pr\u00e9sentation\n\n\n Guides d'utilisation: Utilisateur \n\n\n\n\n\n\nLes pages\n\n\nArticle / Liste\n\n\nTopic / Liste\n\n\n\n\n\n\nLes menus\n\n\nProfil\n\n\nDashboard\n\n\nPreferences\n\n\n\n\n\n\n\n\n\n\nLes pages\n\n\nArticle / Liste\n\n\nTopic / Liste\n\n\nLes menus\n\n\nProfil\n\n\nDashboard\n\n\nPreferences",
            "title": "Introduction"
        },
        {
            "location": "/02_Utilisateur/00_Introduction/index.html#les-pages",
            "text": "Article / Liste  Topic / Liste",
            "title": "Les pages"
        },
        {
            "location": "/02_Utilisateur/00_Introduction/index.html#les-menus",
            "text": "Profil  Dashboard  Preferences",
            "title": "Les menus"
        },
        {
            "location": "/02_Utilisateur/01_Saisie_Article/index.html",
            "text": "Saisie article",
            "title": "Saisie Article"
        },
        {
            "location": "/02_Utilisateur/01_Saisie_Article/index.html#saisie-article",
            "text": "",
            "title": "Saisie article"
        },
        {
            "location": "/02_Utilisateur/02_Image_et_assets/index.html",
            "text": "",
            "title": "Image et assets"
        },
        {
            "location": "/02_Utilisateur/03_Topic/index.html",
            "text": "",
            "title": "Topic"
        },
        {
            "location": "/02_Utilisateur/04_Publication_Export/index.html",
            "text": "",
            "title": "Publication et Export"
        }
    ]
}